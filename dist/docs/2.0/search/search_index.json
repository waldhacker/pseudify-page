{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview pseudify AI - the database pseudonymizer Pseudify is a AI powered toolbox that helps you to pseudonymize database data. You can find hidden personally identifiable information (PII) in your database and you can pseudonymize them. Features \ud83c\udf89 Analyze and pseudonymize supported databases from any application \ud83c\udf89 Find hidden personally identifiable information (PII) with or without AI support \ud83c\udf89 Data integrity: same input data generates same pseudonyms across all database columns \ud83c\udf89 Analyze and pseudonymize easily encoded data \ud83c\udf89 Analyze and pseudonymize multi-encoded data \ud83c\udf89 Analyze and pseudonymize complex data structures like JSON or serialized PHP data \ud83c\udf89 Analyze and pseudonymize dynamic data \ud83c\udf89 12 built-in decoders / encoders \ud83c\udf89 Extensibility with custom decoders / encoders \ud83c\udf89 100+ built-in localizable fake data formats thanks to FakerPHP \ud83c\udf89 Extensibility with own fake data formats \ud83c\udf89 Support for 7 built-in database platforms thanks to Doctrine DBAL \ud83c\udf89 Extensibility with own database platforms \ud83c\udf89 Modeling of profiles with a powerful GUI Supported databases MySQL doctrine dbal support pseudify support driver in docker image MySQL 5.1 \u2714 \u2714 * \u2714 MySQL 5.5 \u2714 \u2714 \u2714 MySQL 5.6 \u2714 \u2714 \u2714 MySQL 5.7 \u2714 \u2714 \u2714 MySQL 8.0 \u2714 \u2714 \u2714 MySQL 8.1 \u2714 \u2714 \u2714 MySQL 8.2 \u2714 \u2714 \u2714 MySQL 8.3 \u2714 \u2714 \u2714 MySQL 8.4 \u2714 \u2714 \u2714 MySQL 9.0 \u2714 \u2714 \u2714 MySQL 9.1 \u2714 \u2714 \u2714 * supported in principle, but not tested MariaDB doctrine dbal support pseudify support driver in docker image MariaDB 10.2 \u2714 \u2714 \u2714 MariaDB 10.3 \u2714 \u2714 \u2714 MariaDB 10.4 \u2714 \u2714 \u2714 MariaDB 10.5 \u2714 \u2714 \u2714 MariaDB 10.6 \u2714 \u2714 \u2714 MariaDB 10.7 \u2714 \u2714 \u2714 MariaDB 10.8 \u2714 \u2714 \u2714 MariaDB 10.9 \u2714 \u2714 \u2714 MariaDB 10.10 \u2714 \u2714 \u2714 MariaDB 10.11 \u2714 \u2714 \u2714 MariaDB 11.0 \u2714 \u2714 \u2714 MariaDB 11.1 \u2714 \u2714 \u2714 MariaDB 11.2 \u2714 \u2714 \u2714 MariaDB 11.3 \u2714 \u2714 \u2714 MariaDB 11.4 \u2714 \u2714 \u2714 MariaDB 11.5 \u2714 \u2714 \u2714 MariaDB 11.6 \u2714 \u2714 \u2714 MariaDB 11.7 \u2714 \u2714 \u2714 PostgreSQL doctrine dbal support pseudify support driver in docker image PostgreSQL 8 \u2714 \u274c \u2714 PostgreSQL 9 \u2714 \u2714 \u2714 PostgreSQL 10 \u2714 \u2714 \u2714 PostgreSQL 11 \u2714 \u2714 \u2714 PostgreSQL 12 \u2714 \u2714 \u2714 PostgreSQL 13 \u2714 \u2714 \u2714 PostgreSQL 14 \u2714 \u2714 \u2714 PostgreSQL 15 \u2714 \u2714 \u2714 PostgreSQL 16 \u2714 \u2714 \u2714 PostgreSQL 17 \u2714 \u2714 \u2714 * supported in principle, but not tested MS SQL Server doctrine dbal support pseudify support driver in docker image SQL Server 2014 \u2714 \u2714 * \u2714 SQL Server 2016 \u2714 \u2714 * \u2714 SQL Server 2017 \u2714 \u2714 \u2714 SQL Server 2019 \u2714 \u2714 \u2714 SQL Server 2022 \u2714 \u2714 \u2714 * supported in principle, but not tested SQLite doctrine dbal support pseudify support driver in docker image SQLite 1.x \u274c \u274c \u274c SQLite 2.x \u274c \u274c \u274c SQLite 3.x \u2714 \u2714 \u2714 Oracle doctrine dbal support pseudify support driver in docker image Oracle Database 11 \u274c \u274c \u274c Oracle Database 12 \u274c \u274c \u274c Oracle Database 18 \u2714 \u2714 * \u274c Oracle Database 19 \u2714 \u2714 * \u274c Oracle Database 21 \u2714 \u2714 * \u274c Oracle Database 23 \u2714 \u2714 * \u274c * supported in principle, but not tested IBM DB2 doctrine dbal support pseudify support driver in docker image DB2 9 \u2753 \u2753 \u274c DB2 10 \u2714 * \u2714 * \u274c DB2 11 \u2714 * \u2714 * \u274c DB2 12 \u2714 * \u2714 * \u274c * supported in principle, but not tested","title":"Overview"},{"location":"#overview","text":"","title":"Overview"},{"location":"#pseudify-ai-the-database-pseudonymizer","text":"Pseudify is a AI powered toolbox that helps you to pseudonymize database data. You can find hidden personally identifiable information (PII) in your database and you can pseudonymize them.","title":"pseudify AI - the database pseudonymizer"},{"location":"#features","text":"\ud83c\udf89 Analyze and pseudonymize supported databases from any application \ud83c\udf89 Find hidden personally identifiable information (PII) with or without AI support \ud83c\udf89 Data integrity: same input data generates same pseudonyms across all database columns \ud83c\udf89 Analyze and pseudonymize easily encoded data \ud83c\udf89 Analyze and pseudonymize multi-encoded data \ud83c\udf89 Analyze and pseudonymize complex data structures like JSON or serialized PHP data \ud83c\udf89 Analyze and pseudonymize dynamic data \ud83c\udf89 12 built-in decoders / encoders \ud83c\udf89 Extensibility with custom decoders / encoders \ud83c\udf89 100+ built-in localizable fake data formats thanks to FakerPHP \ud83c\udf89 Extensibility with own fake data formats \ud83c\udf89 Support for 7 built-in database platforms thanks to Doctrine DBAL \ud83c\udf89 Extensibility with own database platforms \ud83c\udf89 Modeling of profiles with a powerful GUI","title":"Features"},{"location":"#supported-databases","text":"","title":"Supported databases"},{"location":"#mysql","text":"doctrine dbal support pseudify support driver in docker image MySQL 5.1 \u2714 \u2714 * \u2714 MySQL 5.5 \u2714 \u2714 \u2714 MySQL 5.6 \u2714 \u2714 \u2714 MySQL 5.7 \u2714 \u2714 \u2714 MySQL 8.0 \u2714 \u2714 \u2714 MySQL 8.1 \u2714 \u2714 \u2714 MySQL 8.2 \u2714 \u2714 \u2714 MySQL 8.3 \u2714 \u2714 \u2714 MySQL 8.4 \u2714 \u2714 \u2714 MySQL 9.0 \u2714 \u2714 \u2714 MySQL 9.1 \u2714 \u2714 \u2714 * supported in principle, but not tested","title":"MySQL"},{"location":"#mariadb","text":"doctrine dbal support pseudify support driver in docker image MariaDB 10.2 \u2714 \u2714 \u2714 MariaDB 10.3 \u2714 \u2714 \u2714 MariaDB 10.4 \u2714 \u2714 \u2714 MariaDB 10.5 \u2714 \u2714 \u2714 MariaDB 10.6 \u2714 \u2714 \u2714 MariaDB 10.7 \u2714 \u2714 \u2714 MariaDB 10.8 \u2714 \u2714 \u2714 MariaDB 10.9 \u2714 \u2714 \u2714 MariaDB 10.10 \u2714 \u2714 \u2714 MariaDB 10.11 \u2714 \u2714 \u2714 MariaDB 11.0 \u2714 \u2714 \u2714 MariaDB 11.1 \u2714 \u2714 \u2714 MariaDB 11.2 \u2714 \u2714 \u2714 MariaDB 11.3 \u2714 \u2714 \u2714 MariaDB 11.4 \u2714 \u2714 \u2714 MariaDB 11.5 \u2714 \u2714 \u2714 MariaDB 11.6 \u2714 \u2714 \u2714 MariaDB 11.7 \u2714 \u2714 \u2714","title":"MariaDB"},{"location":"#postgresql","text":"doctrine dbal support pseudify support driver in docker image PostgreSQL 8 \u2714 \u274c \u2714 PostgreSQL 9 \u2714 \u2714 \u2714 PostgreSQL 10 \u2714 \u2714 \u2714 PostgreSQL 11 \u2714 \u2714 \u2714 PostgreSQL 12 \u2714 \u2714 \u2714 PostgreSQL 13 \u2714 \u2714 \u2714 PostgreSQL 14 \u2714 \u2714 \u2714 PostgreSQL 15 \u2714 \u2714 \u2714 PostgreSQL 16 \u2714 \u2714 \u2714 PostgreSQL 17 \u2714 \u2714 \u2714 * supported in principle, but not tested","title":"PostgreSQL"},{"location":"#ms-sql-server","text":"doctrine dbal support pseudify support driver in docker image SQL Server 2014 \u2714 \u2714 * \u2714 SQL Server 2016 \u2714 \u2714 * \u2714 SQL Server 2017 \u2714 \u2714 \u2714 SQL Server 2019 \u2714 \u2714 \u2714 SQL Server 2022 \u2714 \u2714 \u2714 * supported in principle, but not tested","title":"MS SQL Server"},{"location":"#sqlite","text":"doctrine dbal support pseudify support driver in docker image SQLite 1.x \u274c \u274c \u274c SQLite 2.x \u274c \u274c \u274c SQLite 3.x \u2714 \u2714 \u2714","title":"SQLite"},{"location":"#oracle","text":"doctrine dbal support pseudify support driver in docker image Oracle Database 11 \u274c \u274c \u274c Oracle Database 12 \u274c \u274c \u274c Oracle Database 18 \u2714 \u2714 * \u274c Oracle Database 19 \u2714 \u2714 * \u274c Oracle Database 21 \u2714 \u2714 * \u274c Oracle Database 23 \u2714 \u2714 * \u274c * supported in principle, but not tested","title":"Oracle"},{"location":"#ibm-db2","text":"doctrine dbal support pseudify support driver in docker image DB2 9 \u2753 \u2753 \u274c DB2 10 \u2714 * \u2714 * \u274c DB2 11 \u2714 * \u2714 * \u274c DB2 12 \u2714 * \u2714 * \u274c * supported in principle, but not tested","title":"IBM DB2"},{"location":"about/","text":"About the project The project was realized by Ralf Zimmermann, made possible by waldhacker UG (haftungsbeschr\u00e4nkt) and sponsored by the Bundesministerium f\u00fcr Bildung und Forschung . Many thanks also to the Prototype Fund and the Open Knowledge Foundation Deutschland e.V. for their support!","title":"About the project"},{"location":"about/#about-the-project","text":"The project was realized by Ralf Zimmermann, made possible by waldhacker UG (haftungsbeschr\u00e4nkt) and sponsored by the Bundesministerium f\u00fcr Bildung und Forschung . Many thanks also to the Prototype Fund and the Open Knowledge Foundation Deutschland e.V. for their support!","title":"About the project"},{"location":"development/","text":"Development Website The source code of the website is located in the repository pseudify-page . To develop the website, the programme ddev is needed. Launch the website $ ddev start $ ddev exec composer install $ ddev launch Building the website # 1.0 = current version $ ddev exec ../build/build.sh 1.0 Core The source code of pseudify is located in the repository pseudify . To develop pseudify, the programme docker compose is needed. Build the pseudify docker image $ ./build/dev/build-docker.sh Start pseudify development environment $ docker compose -f docker-compose.yml -f docker-compose.llm-addon.yml -f docker-compose.dev.yml -f docker-compose.test.yml up -d $ ./build/dev/install.sh Import testdata $ ./tests/import.sh Run the pseudify development environment You can access the GUI in your browser with the url http://127.0.0.1:9669 . Run the commandline tool like this: $ docker exec -it pseudify bin/pseudify pseudify:debug:table_schema","title":"Development"},{"location":"development/#development","text":"","title":"Development"},{"location":"development/#website","text":"The source code of the website is located in the repository pseudify-page . To develop the website, the programme ddev is needed.","title":"Website"},{"location":"development/#launch-the-website","text":"$ ddev start $ ddev exec composer install $ ddev launch","title":"Launch the website"},{"location":"development/#building-the-website","text":"# 1.0 = current version $ ddev exec ../build/build.sh 1.0","title":"Building the website"},{"location":"development/#core","text":"The source code of pseudify is located in the repository pseudify . To develop pseudify, the programme docker compose is needed.","title":"Core"},{"location":"development/#build-the-pseudify-docker-image","text":"$ ./build/dev/build-docker.sh","title":"Build the pseudify docker image"},{"location":"development/#start-pseudify-development-environment","text":"$ docker compose -f docker-compose.yml -f docker-compose.llm-addon.yml -f docker-compose.dev.yml -f docker-compose.test.yml up -d $ ./build/dev/install.sh","title":"Start pseudify development environment"},{"location":"development/#import-testdata","text":"$ ./tests/import.sh","title":"Import testdata"},{"location":"development/#run-the-pseudify-development-environment","text":"You can access the GUI in your browser with the url http://127.0.0.1:9669 . Run the commandline tool like this: $ docker exec -it pseudify bin/pseudify pseudify:debug:table_schema","title":"Run the pseudify development environment"},{"location":"license/","text":"License pseudify license (GPLv3) GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. Preamble The GNU General Public License is a free, copyleft license for software and other kinds of works. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions. Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and modification follow. TERMS AND CONDITIONS 0. Definitions. \"This License\" refers to version 3 of the GNU General Public License. \"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. \"The Program\" refers to any copyrightable work licensed under this License. Each licensee is addressed as \"you\". \"Licensees\" and \"recipients\" may be individuals or organizations. To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work. A \"covered work\" means either the unmodified Program or a work based on the Program. To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion. 1. Source Code. The \"source code\" for a work means the preferred form of the work for making modifications to it. \"Object code\" means any non-source form of a work. A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work. 2. Basic Permissions. All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary. 3. Protecting Users' Legal Rights From Anti-Circumvention Law. No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures. When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures. 4. Conveying Verbatim Copies. You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee. 5. Conveying Modified Source Versions. You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions: a) The work must carry prominent notices stating that you modified it, and giving a relevant date. b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to \"keep intact all notices\". c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it. d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so. A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate. 6. Conveying Non-Source Forms. You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways: a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange. b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b. d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements. e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d. A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work. A \"User Product\" is either (1) a \"consumer product\", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, \"normally used\" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product. \"Installation Information\" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made. If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM). The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying. 7. Additional Terms. \"Additional permissions\" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission. Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms: a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or d) Limiting the use for publicity purposes of names of licensors or authors of the material; or e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors. All other non-permissive additional terms are considered \"further restrictions\" within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying. If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms. Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way. 8. Termination. You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11). However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10. 9. Acceptance Not Required for Having Copies. You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so. 10. Automatic Licensing of Downstream Recipients. Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License. An \"entity transaction\" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it. 11. Patents. A \"contributor\" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's \"contributor version\". A contributor's \"essential patent claims\" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, \"control\" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License. Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version. In the following three paragraphs, a \"patent license\" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To \"grant\" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party. If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. \"Knowingly relying\" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it. A patent license is \"discriminatory\" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007. Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law. 12. No Surrender of Others' Freedom. If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program. 13. Use with the GNU Affero General Public License. Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such. 14. Revised Versions of this License. The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation. If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program. Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version. 15. Disclaimer of Warranty. THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. Limitation of Liability. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. 17. Interpretation of Sections 15 and 16. If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee. END OF TERMS AND CONDITIONS How to Apply These Terms to Your New Programs If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms. To do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found. pseudify - the database pseudonymizer Copyright (C) 2022 waldhacker UG (haftungsbeschr\u00e4nkt) This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Also add information on how to contact you by electronic and paper mail. If the program does terminal interaction, make it output a short notice like this when it starts in an interactive mode: pseudify - the database pseudonymizer Copyright (C) 2022 waldhacker UG (haftungsbeschr\u00e4nkt) This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. The hypothetical commands `show w' and `show c' should show the appropriate parts of the General Public License. Of course, your program's commands might be different; for a GUI interface, you would use an \"about box\". You should also get your employer (if you work as a programmer) or school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. For more information on this, and how to apply and follow the GNU GPL, see <http://www.gnu.org/licenses/>. The GNU General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Lesser General Public License instead of this License. But first, please read <http://www.gnu.org/philosophy/why-not-lgpl.html>.","title":"License"},{"location":"license/#license","text":"","title":"License"},{"location":"license/#pseudify-license-gplv3","text":"GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. Preamble The GNU General Public License is a free, copyleft license for software and other kinds of works. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions. Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and modification follow. TERMS AND CONDITIONS 0. Definitions. \"This License\" refers to version 3 of the GNU General Public License. \"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. \"The Program\" refers to any copyrightable work licensed under this License. Each licensee is addressed as \"you\". \"Licensees\" and \"recipients\" may be individuals or organizations. To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work. A \"covered work\" means either the unmodified Program or a work based on the Program. To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion. 1. Source Code. The \"source code\" for a work means the preferred form of the work for making modifications to it. \"Object code\" means any non-source form of a work. A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work. 2. Basic Permissions. All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary. 3. Protecting Users' Legal Rights From Anti-Circumvention Law. No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures. When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures. 4. Conveying Verbatim Copies. You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee. 5. Conveying Modified Source Versions. You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions: a) The work must carry prominent notices stating that you modified it, and giving a relevant date. b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to \"keep intact all notices\". c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it. d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so. A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate. 6. Conveying Non-Source Forms. You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways: a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange. b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b. d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements. e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d. A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work. A \"User Product\" is either (1) a \"consumer product\", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, \"normally used\" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product. \"Installation Information\" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made. If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM). The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying. 7. Additional Terms. \"Additional permissions\" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission. Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms: a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or d) Limiting the use for publicity purposes of names of licensors or authors of the material; or e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors. All other non-permissive additional terms are considered \"further restrictions\" within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying. If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms. Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way. 8. Termination. You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11). However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10. 9. Acceptance Not Required for Having Copies. You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so. 10. Automatic Licensing of Downstream Recipients. Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License. An \"entity transaction\" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it. 11. Patents. A \"contributor\" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's \"contributor version\". A contributor's \"essential patent claims\" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, \"control\" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License. Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version. In the following three paragraphs, a \"patent license\" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To \"grant\" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party. If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. \"Knowingly relying\" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it. A patent license is \"discriminatory\" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007. Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law. 12. No Surrender of Others' Freedom. If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program. 13. Use with the GNU Affero General Public License. Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such. 14. Revised Versions of this License. The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation. If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program. Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version. 15. Disclaimer of Warranty. THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. Limitation of Liability. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. 17. Interpretation of Sections 15 and 16. If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee. END OF TERMS AND CONDITIONS How to Apply These Terms to Your New Programs If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms. To do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found. pseudify - the database pseudonymizer Copyright (C) 2022 waldhacker UG (haftungsbeschr\u00e4nkt) This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Also add information on how to contact you by electronic and paper mail. If the program does terminal interaction, make it output a short notice like this when it starts in an interactive mode: pseudify - the database pseudonymizer Copyright (C) 2022 waldhacker UG (haftungsbeschr\u00e4nkt) This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. The hypothetical commands `show w' and `show c' should show the appropriate parts of the General Public License. Of course, your program's commands might be different; for a GUI interface, you would use an \"about box\". You should also get your employer (if you work as a programmer) or school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. For more information on this, and how to apply and follow the GNU GPL, see <http://www.gnu.org/licenses/>. The GNU General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Lesser General Public License instead of this License. But first, please read <http://www.gnu.org/philosophy/why-not-lgpl.html>.","title":"pseudify license (GPLv3)"},{"location":"usage/","text":"Analyse and pseudonymize the database System overview The menu item 'Information' provides an overview of the system configuration. The provided information is equivalent to that obtained with the command line command pseudify pseudify:information . Available profiles to analyze and pseudonymize the database The values from the .env file. Registered condition expression functions Registered data encoders / deoders Registered doctrine type implementations Connection details per connection Available database drivers Create and edit profiles The menu item 'Profiles > Load / Create' let you create profiles or load existing ones. No profile exists at the beginning, so one must be created. Identifier A unique name that identifies the profile. Description A short description for the profile. Existing profiles can be selected from a list so that they can then be used. If multiple connections are configured , the connections can also be selected. If you want to unload the profile then click the button Unload profile . About low-level profiles (PHP) Previous versions of pseudify were only able to work with PHP based profiles. While it is not possible to edit such profiles using the GUI, it is still possible to use these profiles with the command line commands pseudify:analyze and pseudify:pseudonymize . This profiles should be placed within the install package directory userdata/src/Profiles/ . The creation of such profiles can be found in the documentation of older pseudify versions: Model an \"Analyze Profile\" Model the pseudonymisation Save profile The menu item 'Profiles > Save' let you save profile changes. Klick the Button Save profile to persist unsaved changes to the YAML file. If there are unsaved profile changes, the GUI shows you this with an icon on each page. It can be seen at the top right. Modelling the pseudonymization Basic profile configuration The menu item 'Configuration > Basic configuration' let you configure basic analyze and pseudonymization settings. Identifier A unique name that identifies the profile. Profile description A short description for the profile. Application name The name of the application to which the database belongs. For example 'TYPO3' or 'Shopware'. The application name is important if the AI feature is used. It helps the AI to better understand the meaning of database data. If you don't use the AI feature, you don't need to fill this property. Application description The description of the application to which the database belongs. The application description is important if the AI feature is used. It helps the AI to better understand the meaning of database data. The more detailed the description, the better the AI can analyze database data. If you don't use the AI feature, you don't need to fill this property. Data frame cutting length Read Output extended information for details. Search strings Pseudify uses database data as a search source to find them in other hidden places in the database. However, it is also possible to use user-defined source data. As an alternative to static values, it is possible to use regular expressions for the search. A regular expression must be identified by the prefix regex: and follow the PCRE regex syntax . For example, regex:(?:[0-9]{1,3}\\.){3}[0-9]{1,3} can be used to search for IPv4 addresses. Global excluded column types You can exclude columns with certain data types from the analysis to shorten the search time. For example, in most cases it does not make sense to search database columns of the type `integer'. Data types can be excluded for certain tables or for all tables. As soon as data types are excluded at the table level, the globally excluded data types are not additionally excluded for this table. Excluded column types are also ignored during pseudonymization. Exclude tables You can exclude entire tables from the analysis to shorten the search time. Excluded tables are also ignored during pseudonymization. Table configuration Under the menu item 'Configuration > Table configuration', you can configure the analysis and settings on a table basis. All tables are listed. If you click on the table entry, the associated columns are listed. A table can be excluded from analysis and pseudonymization using the eye icon and configured using the gear icon. A column can be excluded from analysis and pseudonymization using the eye icon and configured using the gear icon. Table description The description of the table. The description is important if the AI feature is used. It helps the AI to better understand the meaning of database data. The more detailed the description, the better the AI can analyze database data. If you don't use the AI feature, you don't need to fill this property. Column configuration The column configuration is the central component for analysis and pseudonymization. The following is defined here: how must the data in the column be decoded so that personally identifiable information ( meanings ) can be found in them? what kind of personally identifiable information ( meaning ) are contained in the decoded columns and how can they be pseudonymized? In the case of scalar, i.e. non-encoded data, this is relatively easy to determine. However, there are also cases in which the data must first be decoded. There are different variants: all column data is encoded with the same method, e.g. all data is encoded with base64. the column data is encoded using different methods and the decision which method to use to decode the data depends on the data in other columns. variant 1 and 2 with the difference that the data is encoded several times. e.g. the data must first be decoded using base64 and then decompressed using gzip. variant 1, 2 and 3 with the difference that the columns contain structured data such as JSON, CSV or serialized PHP data after decoding. This data must be decoded in such a way that the contained data structure can be accessed in order to access the personally identifiable information it contains. variant 1, 2, 3 and 4 with the difference that the decoded structured data in turn contains other structured data, e.g. CSV data is contained in a property of a JSON object. All these variants can be handled with pseudify using the column configuration. We will now go through the variants in a short tutorial: Define column data encodings Scalar data This is the simplest variant. As you can see, no decoding is necessary as the 'Decoded data' column contains scalar data. The 'Data paths' column does not contain any values, as the decoded data is not structured data. If you click on the magnifying glass icon in the Meanings column, pseudify will try to guess the meaning of the decoded data and make suggestions. If the AI feature is used, the guessing is done using AI. These suggestions can now be used to define the meaning of the data . Complex and conditional encodings As you can see, the data appears to be encoded because it does not look like human-readable data. If you click on the magnifying glass symbol in the Decoded data column, pseudify will try to guess the encoding of the data and make suggestions. In the column configuration, we now add a decoding by clicking the Add encoding button. Various properties can be defined here. For now, we only want to create a simple decoding and therefore click on the Add encoder button and select the suggested decoding using 'Hex'. The data appears to be decoded, but still not in a human-readable format. It seems that the data is still encoded. If you click on the magnifying glass icon in the Decoded data column, pseudify will try to guess the encoding of the data and make suggestions. It will guess that the data format looks like base64. We therefore create another decoding by clicking on the Add encoder button and select the suggested decoding using 'Base64'. In the first two columns we now see JSON data and in the other columns nothing meaningful seems to have been decoded. Let's take a look at the surrounding data in the data set, the Context . To do this, we activate the Context column by clicking on Context at the top of the row of buttons. The data appears to be decoded correctly in the datasets for which the log_type column contains the value foo . The datasets in which the log_type column contains the value bar appear to be coded using other methods. We first restrict our encoding to all datasets for which the log_type column contains the value foo . To do this, we create a condition by clicking on the Add condition button. Here we write column('log_type') == 'foo' and save the configuration. Info All usable expression functions can be viewed in the configuration overview under Registered condition expression functions . More information about the expression syntax can be found in the symfony expression language documentation . We can see that our encoding now only decodes the datasets where the log_type column contains the value foo . The other datasets are not decoded. For these datasets, a further Encoding with the correspondingly modified condition column('log_type') == 'bar' can be generated. The encoders that decode these columns correctly can then be defined there. We can see that our column contains structured data that needs to be decoded further. If you click on the magnifying glass icon in the Decoded data column, pseudify will try to guess the encoding of the data and make suggestions. It will guess that the data format looks like JSON. We therefore create another decoding by clicking on the Add encoder button and select the suggested decoding using 'Json'. We see that the column Data paths (column 2 in the screenshot) now shows us data. Using these paths, we can then define the meanings of these data paths . Neasted encodings It can happen that structured data such as JSON contains other structured data that contains personally identifiable information that we want to access. The example shows that the column was decoded several times in order to decode serialized PHP data at the end. You can see that the data path key2.session_data contains a character string, which in turn corresponds to serialized PHP data. We want to be able to access this in a structured way in order to be able to pseudonymize the IP address it contains. We therefore add another decoder for serialized PHP data and write the data path key2.session_data in its Path option. Now the data path key2.session_data is interpreted as serialized PHP data. This data can now be accessed. Info The Path option in a decoder always refers to the decoded data generated by the previously added decoder. Info It is currently not possible to decode multiple data paths in parallel. It is currently only possible to continue decoding one branch at a time in structured data. If more complex decoding is required, the low-level profiles (PHP) must be used. Define column data meanings Meanings are synonymous with personally identifiable information. A meaning has 2 functions: All defined meanings are used in the analysis process to search for them in the rest of the database. In this way, unknown occurrences of this data can be identified and then also defined as a meaning. In the pseudonymization process, all defined meanings are exchanged for pseudonyms. In the example, we can see that the 'Data paths' column (column 2 in the screenshot) shows us data paths for the decoded data structure. We can now use these paths to define meanings. If the original data or the decoded data is scalar data, nothing will be visible in the 'Data paths' column, because in these cases pseudify can pseudonymize the decoded data directly. A meaning can now be defined for each data path by clicking the Add meaning button. Path The data path for which the meaning is to apply must be entered here. In the case of scalar data, this option must remain empty. Faker type Here you can select one of the available faker formats against which the decoded data is to be replaced during pseudonymization. Pseudify uses the FakerPHP/Faker component to be able to fake various data formats. It is also possible to define custom ones . After saving, the Meanings column shows which data would be replaced during pseudonymization ( originalValue ) and what a pseudonym would look like as an example ( fakedValue ). Conditional meanings As in the case of encodings, it may also be necessary to place conditions on meanings. The example shows that the ip data path can contain both ipv4 and ipv6 addresses. If it is important that these different address formats are retained during pseudonymization, then the meaning must be defined using conditions in such a way that one meaning fakes an ipv4 address if the original data looks like an ipv4 address and the another meaning must do the same for ipv6 data formats. To do this, 2 meanings are now defined for the same data path ip and placed under conditions. The first Meaning is given the condition isIpV6(value('ip')) and the second Meaning is given the condition isIpV4(value('ip')) . After saving, you can see that the data is now faked in such a way that the original ipv4 and ipv6 data formats are retained. The scope option To preserve data integrity, pseudify is designed to always return the same pseudonym for the same input data during a pseudonymisation run. This means that during the execution of a pseudonymisation using pseudify pseudify:pseudonymize test-profile , all userName meanings will generate e.g. the pseudonym Klaus for the input data Stan . A new pseudonymisation of the original database using pseudify pseudify:pseudonymize test-profile will generate e.g. the pseudonym Roger for all userName meanings for the input data Stan and not Klaus as in the first pseudonymisation run. This ensures two things: Within a pseudonymisation run, the same original data is always replaced with the same pseudonym. (The value \"Stan\" from Table 1 and Table 2 is replaced with \"Klaus\" in Table 1 and Table 2). Between different pseudonymisation runs, the same original data generate different pseudonyms. (In the first pseudonymisation, the value \"Stan\" from Table 1 and Table 2 is replaced with \"Klaus\" in both tables, in the second pseudonymisation, the value \"Stan\" from Table 1 and Table 2 is replaced with the value \"Roger\" in both tables, and so on). If for some reason you want to change this behaviour, you can define the option scope . With this option you can instruct pseudify to create different pseudonyms per scope for the same input data. Column description The description of the column. The description is important if the AI feature is used. It helps the AI to better understand the meaning of database data. The more detailed the description, the better the AI can analyze database data. If you don't use the AI feature, you don't need to fill this property. Auto configuration Note Save unsaved profile changes before running this action. The menu item 'Configuration > Autoconfiguration' attempts to guess the encodings and meanings for each database table and each database column. The autoconfiguration goes through all tables and their columns and tries to decode the columns and then guess a meaning in them. However, it is currently only able to decode simple encodings. If a column is encoded several times with different encodings, the autoconfiguration will not deliver correct results. But expect wrong results in any case. The autoconfiguration is intended to provide a rough introduction to the configuration. You should check all table column configurations after an autoconfiguration. If you have activated the AI feature , the autoconfiguration also attempts to recognize the application and the table and column descriptions for you. The autoconfiguration only guesses the encoding if no encodings have yet been defined for the column. The same rules for the meaning. Using the commandline Analyze database data Note Save unsaved profile changes before running this action. The menu item 'Pseudonymize > Analyze' executes the command pseudify:analyze and displays the result in the browser. The analysis process is used to determine in which \u201cunlit corners\u201d of the database personally identifiable information (PII) is hidden. We therefore use the personally identifiable information already known to us, which we have defined as meanings , to find them in the rest of the database. Warning In order to be able to display the command output, pseudify writes output to the file userdata/var/log/analyze.log . This file may contain sensitive data. Pseudify deletes this file after an analysis, but things can be wrong. You should ensure that there are no leftovers. Using the commandline An analyze can be executed with the command pseudify:analyse <profile-name> . $ docker run --rm -it -v \"$(pwd)/userdata/\":/opt/pseudify/userdata/ \\ ghcr.io/waldhacker/pseudify-ai:2.0 pseudify:analyze test-profile Warning In order to be able to analyze the database data fast, pseudify writes database content to the file system path userdata/var/cache/pseudify/database/ . This data contain sensitive data. Pseudify deletes this data after an analysis, but things can be wrong. You should ensure that there are no leftovers in this file system path after an analysis. The summary of the analysis lists which source data (column data ) from which source database column (column source ) can be found in which database columns (column seems to be in ). If there is a __custom__.__custom__ in the source column, this means that the source data does not come from a database column, but was defined using search strings . If you were not previously aware that certain source data can be found in a database column under seems to be in , then you can now take a closer look at these database columns and define the data as meanings . Output extended information For debugging or refining the analysis, it may be useful to see what data pseudify found in the database data. To do this, the command pseudify:analyse can be called with the parameter --verbose : $ docker run --rm -it -v \"$(pwd)/userdata/\":/opt/pseudify/userdata/ \\ ghcr.io/waldhacker/pseudify-ai:2.0 pseudify:analyze <profil-name> --verbose Now the source data is listed in the column source like 1321:57fc:460b:d4d0:d83f:c200:4b:f1c8 . The column example contains the finding like '...ip\";s:37:\" 1321:57fc:460b:d4d0:d83f:c200:4b:f1c8 \";}\";}s:4:...'. The number of characters that are output before and after the finding can be defined with the Data frame cutting length option. By default, 10 characters are output before and after a finding. If the value is set to 0, nothing is cut off before and after the finding and the complete column content is output. Advanced options --connection <connection-name> : Read Multiple connection configurations Pseudonymize database data Note Save unsaved profile changes before running this action. The menu item 'Pseudonymize > Pseudonymize' executes the command pseudify:pseudonymize and displays the result in the browser. Warning In order to be able to display the command output, pseudify writes output to the file userdata/var/log/pseudonymize.log . This file may contain sensitive data. Pseudify deletes this file after an pseudonymization, but things can be wrong. You should ensure that there are no leftovers. Using the commandline (recommended for CI/CD usage) A pseudonymization can be executed with the command pseudify:pseudonymize <profile-name> . After the pseudonymization, the word done is displayed. That's it. $ docker run --rm -it -v \"$(pwd)/userdata/\":/opt/pseudify/userdata/ \\ ghcr.io/waldhacker/pseudify-ai:2.0 pseudify:pseudonymize test-profile Dry run You can test your pseudonymization without overwriting the data in the database. With the parameter --dry-run all SQL statements are logged to the file userdata/var/log/pseudify_dry_run.log that pseudify would execute. Note The original data and the pseudonymized data are not logged one-to-one. Valid SQL would be UPDATE wh_user SET username = 'tavares.satterfield' WHERE username = 'karl13' . However, --dry-run additionally lists the name of the internally used placeholder (e.g. :dcValue1: , :dcValue2: ...) before the data, which can simplify debugging. Advanced options --connection <connection-name> : Read Multiple connection configurations Parallel execution If your database is very large, you can speed up the pseudonymization process by performing it in parallel with the option --parallel . $ docker run --rm -it -v \"$(pwd)/userdata/\":/opt/pseudify/userdata/ \\ ghcr.io/waldhacker/pseudify-ai:2.0 pseudify:pseudonymize test-profile --parallel It is not possible to say in general whether serial or parallel processing is faster. You have to try it out. Parallel processing can be configured with 2 parameters: --concurrency <number> : How many parallel processes. Default: 10 --items-per-process <number> : How many rows to processes each parallel execution. Default: 5000 $ docker run --rm -it -v \"$(pwd)/userdata/\":/opt/pseudify/userdata/ \\ ghcr.io/waldhacker/pseudify-ai:2.0 pseudify:pseudonymize test-profile --parallel --concurrency 10 --items-per-process 5000","title":"Analyse and pseudonymize the database"},{"location":"usage/#analyse-and-pseudonymize-the-database","text":"","title":"Analyse and pseudonymize the database"},{"location":"usage/#system-overview","text":"The menu item 'Information' provides an overview of the system configuration. The provided information is equivalent to that obtained with the command line command pseudify pseudify:information .","title":"System overview"},{"location":"usage/#available-profiles-to-analyze-and-pseudonymize-the-database","text":"","title":"Available profiles to analyze and pseudonymize the database"},{"location":"usage/#the-values-from-the-env-file","text":"","title":"The values from the .env file."},{"location":"usage/#registered-condition-expression-functions","text":"","title":"Registered condition expression functions"},{"location":"usage/#registered-data-encoders-deoders","text":"","title":"Registered data encoders / deoders"},{"location":"usage/#registered-doctrine-type-implementations","text":"","title":"Registered doctrine type implementations"},{"location":"usage/#connection-details-per-connection","text":"","title":"Connection details per connection"},{"location":"usage/#available-database-drivers","text":"","title":"Available database drivers"},{"location":"usage/#create-and-edit-profiles","text":"The menu item 'Profiles > Load / Create' let you create profiles or load existing ones. No profile exists at the beginning, so one must be created.","title":"Create and edit profiles"},{"location":"usage/#identifier","text":"A unique name that identifies the profile.","title":"Identifier"},{"location":"usage/#description","text":"A short description for the profile. Existing profiles can be selected from a list so that they can then be used. If multiple connections are configured , the connections can also be selected. If you want to unload the profile then click the button Unload profile .","title":"Description"},{"location":"usage/#about-low-level-profiles-php","text":"Previous versions of pseudify were only able to work with PHP based profiles. While it is not possible to edit such profiles using the GUI, it is still possible to use these profiles with the command line commands pseudify:analyze and pseudify:pseudonymize . This profiles should be placed within the install package directory userdata/src/Profiles/ . The creation of such profiles can be found in the documentation of older pseudify versions: Model an \"Analyze Profile\" Model the pseudonymisation","title":"About low-level profiles (PHP)"},{"location":"usage/#save-profile","text":"The menu item 'Profiles > Save' let you save profile changes. Klick the Button Save profile to persist unsaved changes to the YAML file. If there are unsaved profile changes, the GUI shows you this with an icon on each page. It can be seen at the top right.","title":"Save profile"},{"location":"usage/#modelling-the-pseudonymization","text":"","title":"Modelling the pseudonymization"},{"location":"usage/#basic-profile-configuration","text":"The menu item 'Configuration > Basic configuration' let you configure basic analyze and pseudonymization settings.","title":"Basic profile configuration"},{"location":"usage/#identifier_1","text":"A unique name that identifies the profile.","title":"Identifier"},{"location":"usage/#profile-description","text":"A short description for the profile.","title":"Profile description"},{"location":"usage/#application-name","text":"The name of the application to which the database belongs. For example 'TYPO3' or 'Shopware'. The application name is important if the AI feature is used. It helps the AI to better understand the meaning of database data. If you don't use the AI feature, you don't need to fill this property.","title":"Application name"},{"location":"usage/#application-description","text":"The description of the application to which the database belongs. The application description is important if the AI feature is used. It helps the AI to better understand the meaning of database data. The more detailed the description, the better the AI can analyze database data. If you don't use the AI feature, you don't need to fill this property.","title":"Application description"},{"location":"usage/#data-frame-cutting-length","text":"Read Output extended information for details.","title":"Data frame cutting length"},{"location":"usage/#search-strings","text":"Pseudify uses database data as a search source to find them in other hidden places in the database. However, it is also possible to use user-defined source data. As an alternative to static values, it is possible to use regular expressions for the search. A regular expression must be identified by the prefix regex: and follow the PCRE regex syntax . For example, regex:(?:[0-9]{1,3}\\.){3}[0-9]{1,3} can be used to search for IPv4 addresses.","title":"Search strings"},{"location":"usage/#global-excluded-column-types","text":"You can exclude columns with certain data types from the analysis to shorten the search time. For example, in most cases it does not make sense to search database columns of the type `integer'. Data types can be excluded for certain tables or for all tables. As soon as data types are excluded at the table level, the globally excluded data types are not additionally excluded for this table. Excluded column types are also ignored during pseudonymization.","title":"Global excluded column types"},{"location":"usage/#exclude-tables","text":"You can exclude entire tables from the analysis to shorten the search time. Excluded tables are also ignored during pseudonymization.","title":"Exclude tables"},{"location":"usage/#table-configuration","text":"Under the menu item 'Configuration > Table configuration', you can configure the analysis and settings on a table basis. All tables are listed. If you click on the table entry, the associated columns are listed. A table can be excluded from analysis and pseudonymization using the eye icon and configured using the gear icon. A column can be excluded from analysis and pseudonymization using the eye icon and configured using the gear icon.","title":"Table configuration"},{"location":"usage/#table-description","text":"The description of the table. The description is important if the AI feature is used. It helps the AI to better understand the meaning of database data. The more detailed the description, the better the AI can analyze database data. If you don't use the AI feature, you don't need to fill this property.","title":"Table description"},{"location":"usage/#column-configuration","text":"The column configuration is the central component for analysis and pseudonymization. The following is defined here: how must the data in the column be decoded so that personally identifiable information ( meanings ) can be found in them? what kind of personally identifiable information ( meaning ) are contained in the decoded columns and how can they be pseudonymized? In the case of scalar, i.e. non-encoded data, this is relatively easy to determine. However, there are also cases in which the data must first be decoded. There are different variants: all column data is encoded with the same method, e.g. all data is encoded with base64. the column data is encoded using different methods and the decision which method to use to decode the data depends on the data in other columns. variant 1 and 2 with the difference that the data is encoded several times. e.g. the data must first be decoded using base64 and then decompressed using gzip. variant 1, 2 and 3 with the difference that the columns contain structured data such as JSON, CSV or serialized PHP data after decoding. This data must be decoded in such a way that the contained data structure can be accessed in order to access the personally identifiable information it contains. variant 1, 2, 3 and 4 with the difference that the decoded structured data in turn contains other structured data, e.g. CSV data is contained in a property of a JSON object. All these variants can be handled with pseudify using the column configuration. We will now go through the variants in a short tutorial:","title":"Column configuration"},{"location":"usage/#define-column-data-encodings","text":"","title":"Define column data encodings"},{"location":"usage/#scalar-data","text":"This is the simplest variant. As you can see, no decoding is necessary as the 'Decoded data' column contains scalar data. The 'Data paths' column does not contain any values, as the decoded data is not structured data. If you click on the magnifying glass icon in the Meanings column, pseudify will try to guess the meaning of the decoded data and make suggestions. If the AI feature is used, the guessing is done using AI. These suggestions can now be used to define the meaning of the data .","title":"Scalar data"},{"location":"usage/#complex-and-conditional-encodings","text":"As you can see, the data appears to be encoded because it does not look like human-readable data. If you click on the magnifying glass symbol in the Decoded data column, pseudify will try to guess the encoding of the data and make suggestions. In the column configuration, we now add a decoding by clicking the Add encoding button. Various properties can be defined here. For now, we only want to create a simple decoding and therefore click on the Add encoder button and select the suggested decoding using 'Hex'. The data appears to be decoded, but still not in a human-readable format. It seems that the data is still encoded. If you click on the magnifying glass icon in the Decoded data column, pseudify will try to guess the encoding of the data and make suggestions. It will guess that the data format looks like base64. We therefore create another decoding by clicking on the Add encoder button and select the suggested decoding using 'Base64'. In the first two columns we now see JSON data and in the other columns nothing meaningful seems to have been decoded. Let's take a look at the surrounding data in the data set, the Context . To do this, we activate the Context column by clicking on Context at the top of the row of buttons. The data appears to be decoded correctly in the datasets for which the log_type column contains the value foo . The datasets in which the log_type column contains the value bar appear to be coded using other methods. We first restrict our encoding to all datasets for which the log_type column contains the value foo . To do this, we create a condition by clicking on the Add condition button. Here we write column('log_type') == 'foo' and save the configuration. Info All usable expression functions can be viewed in the configuration overview under Registered condition expression functions . More information about the expression syntax can be found in the symfony expression language documentation . We can see that our encoding now only decodes the datasets where the log_type column contains the value foo . The other datasets are not decoded. For these datasets, a further Encoding with the correspondingly modified condition column('log_type') == 'bar' can be generated. The encoders that decode these columns correctly can then be defined there. We can see that our column contains structured data that needs to be decoded further. If you click on the magnifying glass icon in the Decoded data column, pseudify will try to guess the encoding of the data and make suggestions. It will guess that the data format looks like JSON. We therefore create another decoding by clicking on the Add encoder button and select the suggested decoding using 'Json'. We see that the column Data paths (column 2 in the screenshot) now shows us data. Using these paths, we can then define the meanings of these data paths .","title":"Complex and conditional encodings"},{"location":"usage/#neasted-encodings","text":"It can happen that structured data such as JSON contains other structured data that contains personally identifiable information that we want to access. The example shows that the column was decoded several times in order to decode serialized PHP data at the end. You can see that the data path key2.session_data contains a character string, which in turn corresponds to serialized PHP data. We want to be able to access this in a structured way in order to be able to pseudonymize the IP address it contains. We therefore add another decoder for serialized PHP data and write the data path key2.session_data in its Path option. Now the data path key2.session_data is interpreted as serialized PHP data. This data can now be accessed. Info The Path option in a decoder always refers to the decoded data generated by the previously added decoder. Info It is currently not possible to decode multiple data paths in parallel. It is currently only possible to continue decoding one branch at a time in structured data. If more complex decoding is required, the low-level profiles (PHP) must be used.","title":"Neasted encodings"},{"location":"usage/#define-column-data-meanings","text":"Meanings are synonymous with personally identifiable information. A meaning has 2 functions: All defined meanings are used in the analysis process to search for them in the rest of the database. In this way, unknown occurrences of this data can be identified and then also defined as a meaning. In the pseudonymization process, all defined meanings are exchanged for pseudonyms. In the example, we can see that the 'Data paths' column (column 2 in the screenshot) shows us data paths for the decoded data structure. We can now use these paths to define meanings. If the original data or the decoded data is scalar data, nothing will be visible in the 'Data paths' column, because in these cases pseudify can pseudonymize the decoded data directly. A meaning can now be defined for each data path by clicking the Add meaning button.","title":"Define column data meanings"},{"location":"usage/#path","text":"The data path for which the meaning is to apply must be entered here. In the case of scalar data, this option must remain empty.","title":"Path"},{"location":"usage/#faker-type","text":"Here you can select one of the available faker formats against which the decoded data is to be replaced during pseudonymization. Pseudify uses the FakerPHP/Faker component to be able to fake various data formats. It is also possible to define custom ones . After saving, the Meanings column shows which data would be replaced during pseudonymization ( originalValue ) and what a pseudonym would look like as an example ( fakedValue ).","title":"Faker type"},{"location":"usage/#conditional-meanings","text":"As in the case of encodings, it may also be necessary to place conditions on meanings. The example shows that the ip data path can contain both ipv4 and ipv6 addresses. If it is important that these different address formats are retained during pseudonymization, then the meaning must be defined using conditions in such a way that one meaning fakes an ipv4 address if the original data looks like an ipv4 address and the another meaning must do the same for ipv6 data formats. To do this, 2 meanings are now defined for the same data path ip and placed under conditions. The first Meaning is given the condition isIpV6(value('ip')) and the second Meaning is given the condition isIpV4(value('ip')) . After saving, you can see that the data is now faked in such a way that the original ipv4 and ipv6 data formats are retained.","title":"Conditional meanings"},{"location":"usage/#the-scope-option","text":"To preserve data integrity, pseudify is designed to always return the same pseudonym for the same input data during a pseudonymisation run. This means that during the execution of a pseudonymisation using pseudify pseudify:pseudonymize test-profile , all userName meanings will generate e.g. the pseudonym Klaus for the input data Stan . A new pseudonymisation of the original database using pseudify pseudify:pseudonymize test-profile will generate e.g. the pseudonym Roger for all userName meanings for the input data Stan and not Klaus as in the first pseudonymisation run. This ensures two things: Within a pseudonymisation run, the same original data is always replaced with the same pseudonym. (The value \"Stan\" from Table 1 and Table 2 is replaced with \"Klaus\" in Table 1 and Table 2). Between different pseudonymisation runs, the same original data generate different pseudonyms. (In the first pseudonymisation, the value \"Stan\" from Table 1 and Table 2 is replaced with \"Klaus\" in both tables, in the second pseudonymisation, the value \"Stan\" from Table 1 and Table 2 is replaced with the value \"Roger\" in both tables, and so on). If for some reason you want to change this behaviour, you can define the option scope . With this option you can instruct pseudify to create different pseudonyms per scope for the same input data.","title":"The scope option"},{"location":"usage/#column-description","text":"The description of the column. The description is important if the AI feature is used. It helps the AI to better understand the meaning of database data. The more detailed the description, the better the AI can analyze database data. If you don't use the AI feature, you don't need to fill this property.","title":"Column description"},{"location":"usage/#auto-configuration","text":"Note Save unsaved profile changes before running this action. The menu item 'Configuration > Autoconfiguration' attempts to guess the encodings and meanings for each database table and each database column. The autoconfiguration goes through all tables and their columns and tries to decode the columns and then guess a meaning in them. However, it is currently only able to decode simple encodings. If a column is encoded several times with different encodings, the autoconfiguration will not deliver correct results. But expect wrong results in any case. The autoconfiguration is intended to provide a rough introduction to the configuration. You should check all table column configurations after an autoconfiguration. If you have activated the AI feature , the autoconfiguration also attempts to recognize the application and the table and column descriptions for you. The autoconfiguration only guesses the encoding if no encodings have yet been defined for the column. The same rules for the meaning.","title":"Auto configuration"},{"location":"usage/#using-the-commandline","text":"","title":"Using the commandline"},{"location":"usage/#analyze-database-data","text":"Note Save unsaved profile changes before running this action. The menu item 'Pseudonymize > Analyze' executes the command pseudify:analyze and displays the result in the browser. The analysis process is used to determine in which \u201cunlit corners\u201d of the database personally identifiable information (PII) is hidden. We therefore use the personally identifiable information already known to us, which we have defined as meanings , to find them in the rest of the database. Warning In order to be able to display the command output, pseudify writes output to the file userdata/var/log/analyze.log . This file may contain sensitive data. Pseudify deletes this file after an analysis, but things can be wrong. You should ensure that there are no leftovers.","title":"Analyze database data"},{"location":"usage/#using-the-commandline_1","text":"An analyze can be executed with the command pseudify:analyse <profile-name> . $ docker run --rm -it -v \"$(pwd)/userdata/\":/opt/pseudify/userdata/ \\ ghcr.io/waldhacker/pseudify-ai:2.0 pseudify:analyze test-profile Warning In order to be able to analyze the database data fast, pseudify writes database content to the file system path userdata/var/cache/pseudify/database/ . This data contain sensitive data. Pseudify deletes this data after an analysis, but things can be wrong. You should ensure that there are no leftovers in this file system path after an analysis. The summary of the analysis lists which source data (column data ) from which source database column (column source ) can be found in which database columns (column seems to be in ). If there is a __custom__.__custom__ in the source column, this means that the source data does not come from a database column, but was defined using search strings . If you were not previously aware that certain source data can be found in a database column under seems to be in , then you can now take a closer look at these database columns and define the data as meanings .","title":"Using the commandline"},{"location":"usage/#output-extended-information","text":"For debugging or refining the analysis, it may be useful to see what data pseudify found in the database data. To do this, the command pseudify:analyse can be called with the parameter --verbose : $ docker run --rm -it -v \"$(pwd)/userdata/\":/opt/pseudify/userdata/ \\ ghcr.io/waldhacker/pseudify-ai:2.0 pseudify:analyze <profil-name> --verbose Now the source data is listed in the column source like 1321:57fc:460b:d4d0:d83f:c200:4b:f1c8 . The column example contains the finding like '...ip\";s:37:\" 1321:57fc:460b:d4d0:d83f:c200:4b:f1c8 \";}\";}s:4:...'. The number of characters that are output before and after the finding can be defined with the Data frame cutting length option. By default, 10 characters are output before and after a finding. If the value is set to 0, nothing is cut off before and after the finding and the complete column content is output.","title":"Output extended information"},{"location":"usage/#advanced-options","text":"--connection <connection-name> : Read Multiple connection configurations","title":"Advanced options"},{"location":"usage/#pseudonymize-database-data","text":"Note Save unsaved profile changes before running this action. The menu item 'Pseudonymize > Pseudonymize' executes the command pseudify:pseudonymize and displays the result in the browser. Warning In order to be able to display the command output, pseudify writes output to the file userdata/var/log/pseudonymize.log . This file may contain sensitive data. Pseudify deletes this file after an pseudonymization, but things can be wrong. You should ensure that there are no leftovers.","title":"Pseudonymize database data"},{"location":"usage/#using-the-commandline-recommended-for-cicd-usage","text":"A pseudonymization can be executed with the command pseudify:pseudonymize <profile-name> . After the pseudonymization, the word done is displayed. That's it. $ docker run --rm -it -v \"$(pwd)/userdata/\":/opt/pseudify/userdata/ \\ ghcr.io/waldhacker/pseudify-ai:2.0 pseudify:pseudonymize test-profile","title":"Using the commandline (recommended for CI/CD usage)"},{"location":"usage/#dry-run","text":"You can test your pseudonymization without overwriting the data in the database. With the parameter --dry-run all SQL statements are logged to the file userdata/var/log/pseudify_dry_run.log that pseudify would execute. Note The original data and the pseudonymized data are not logged one-to-one. Valid SQL would be UPDATE wh_user SET username = 'tavares.satterfield' WHERE username = 'karl13' . However, --dry-run additionally lists the name of the internally used placeholder (e.g. :dcValue1: , :dcValue2: ...) before the data, which can simplify debugging.","title":"Dry run"},{"location":"usage/#advanced-options_1","text":"--connection <connection-name> : Read Multiple connection configurations","title":"Advanced options"},{"location":"usage/#parallel-execution","text":"If your database is very large, you can speed up the pseudonymization process by performing it in parallel with the option --parallel . $ docker run --rm -it -v \"$(pwd)/userdata/\":/opt/pseudify/userdata/ \\ ghcr.io/waldhacker/pseudify-ai:2.0 pseudify:pseudonymize test-profile --parallel It is not possible to say in general whether serial or parallel processing is faster. You have to try it out. Parallel processing can be configured with 2 parameters: --concurrency <number> : How many parallel processes. Default: 10 --items-per-process <number> : How many rows to processes each parallel execution. Default: 5000 $ docker run --rm -it -v \"$(pwd)/userdata/\":/opt/pseudify/userdata/ \\ ghcr.io/waldhacker/pseudify-ai:2.0 pseudify:pseudonymize test-profile --parallel --concurrency 10 --items-per-process 5000","title":"Parallel execution"},{"location":"versions/","text":"Versions current (2.0) - Documentation 0.1 - Documentation","title":"Versions"},{"location":"versions/#versions","text":"current (2.0) - Documentation 0.1 - Documentation","title":"Versions"},{"location":"whatToPseudonymize/","text":"What to pseudonymize? 1 2 As a general rule, all personal data should be pseudonymised. According to Directive 95/46/EC of the European Union (hereinafter referred to as the \"Data Protection Directive\"), personal data shall mean \"any information relating to an identified or identifiable natural person.\" An identifiable person is one who can be identified, directly or indirectly. This can be done by means of an identification number, but also by means of one or more specific characteristics which are an expression of physical, physiological, mental, economic, cultural or social identity. This makes it clear that special care must be taken not only to pseudonymise obviously personal information, but also information that can enable the identification of a person via secondary characteristics, e.g. locations or behaviour patterns. In general terms, the Data Protection Directive aims to ensure the protection of fundamental rights and freedoms of individuals, in particular privacy, with regard to the processing of personal data. The definition of \"personal data\" consists of four elements. A more detailed analysis of these is instructive for understanding what is meant by \"personal data\". These four elements are: 1. any information 2. relating to 3. an identified or identifiable 4. natural person 1. Any Information With the wording \"all information\", the Data Protection Directive refers to the fact that the term \"personal data\" is to be understood as broadly as possible, i.e. it requires a generous interpretation. \"Personal data\" can thus be any information about a person. This can be objective information, such as body size or medical findings, but also subjective information, such as opinions or assessments by and about a person. Assessments from companies about customers such as: \"Titius is a reliable borrower\" or \"Titius is a good employee and deserves a promotion\" are examples of this. This information does not necessarily have to be true to be considered personal data. 2. Relating to In general, information refers to a person when it is information about that person. In many situations, a reference can be easily established. The information in personnel files or medical records clearly refers to a specific person. The same applies to video or audio recordings. However, there are also many situations in which it is not easy to determine whether certain information refers to a person. In principle, in these cases, \"data relates to an individual if it refers to the identity, characteristics or behaviour of an individual or if such information is used to determine or influence the way in which that person is treated or evaluated 3 .\" An example of this would be the location monitoring of taxis to improve the quality of service. Even if this monitoring is solely to improve the quality of service, it can have an indirect impact on drivers. If a taxi company's taxis are tracked by GPS at their headquarters in order to assign each customer to the taxi closest to them, which would save time and fuel, it is in principle the vehicles' data that is of interest and not the drivers'. Thus, the purpose of the data collection is not to assess or monitor whether drivers are taking the shortest routes or obeying speed limits. Nevertheless, such collection could be made with this system. Thus, it is in principle possible that this data processing system may have a significant impact on individuals and thus the related data may be classified as \"personal data\". Therefore, the data collected should be subject to data protection rules. 3. An identified or identifiable A natural person is considered an \"identified person\" if he or she is distinguished from all other members in a group of persons, i.e. he or she is clearly identifiable. If there are several persons with the same name in a data collection and no further information is available that makes a person uniquely identifiable, these persons are thus not considered to be \"specified persons\", since it cannot be clearly determined to which natural person the corresponding data record refers. An \"identifiable person\" in this context is therefore a natural person for whom it is in principle possible to establish his or her identity. In this respect, the Data Protection Directive identifies in Article 2 general \"characteristics\" of \"personal data\". Such data exist when a natural person \"can be identified, directly or indirectly, in particular by reference to an identification number or to one or more factors specific to his physical, physiological, mental, economic, cultural or social identity\". A person can be identified directly by his or her name or indirectly by a telephone number, car registration number or insurance number. Equally, however, this is also possible through a combination of essential criteria, such as place of residence, occupation or age group, which makes it possible to narrow down the group to which the person belongs. This shows that the information needed for identification depends on the context of the situation. While a frequently occurring family name is not sufficient to identify a person within a national population, within a school class it may well be sufficient to successfully identify a person. The category \"indirectly identified or identifiable persons\" thus refers to identification by means of unique combinations. The scope of these combinations does not matter. Depending on the context, a person can be determined by means of a few characteristics or a very large quantity of them is required. Even if the existing data do not allow an immediate conclusion to be drawn about specific persons, these persons can still be identifiable because the existing information in combination with other information could make a clear identification of these persons possible. It is irrelevant whether this additional information is stored by the data controller, is not stored or is not available to the data controller at all. \"Whereas to determine whether a person is identifiable\", as defined in the Data Protection Directive, \"account should be taken of all the means likely reasonably to be used either by the controller or by any other person to identify the said person.\" This means that the mere hypothetical possibility to identify a person is not sufficient to consider the person identifiable. If this possibility does not exist or is negligible, then the person is not to be classified as \"identifiable\" and the corresponding information is not considered \"personal data\". However, this classification must be seen as a dynamic process. What is not possible at the current time, with the current state of the technology, may well be feasible at a later date. Consequently, the potential development of the technical possibility should be taken into account in relation to the time period during which the data is stored. For example, if the data is kept for one month and identification is almost impossible during this period, the data is not considered \"personal data\". However, if the retention period is 10 years and identification could become possible during this period, this possibility should be taken into account by the data controller. In case of a future possibility of identification, the data shall be considered as personal data from that moment on. 4. Natural person The provisions of the Data Protection Directive apply to natural persons. This means that the right to the protection of personal data applies generally to all people and not just to nationals or residents of a particular country. A more precise definition of what constitutes a legal personality is found in the civil law of individual states. In general, it refers to the capacity to enter into a legal relationship, which begins at birth and ends at death. Personal data is therefore data that relates to specific or identifiable living persons. Since it is not always possible to determine whether a person is actually no longer alive, in practice, for the sake of simplicity, data on deceased persons should be treated in the same way as data on living persons, rather than processing the two groups separately. Furthermore, information about deceased persons can also relate to living persons. For example, information about a hereditary disease of the deceased father can enable conclusions to be drawn about his children. Therefore, if information about deceased persons relates to living persons at the same time and is personal data, personal data about deceased persons may indirectly fall under the protection of the data protection regulation. Since the definition of \"personal data\" refers in principle only to human beings, i.e. natural persons, legal persons do not fall within the scope of the Data Protection Directive and its protection therefore does not apply to them. This general provision is limited for cases where the information on the legal person allows a reference to a natural person. In such cases, the data must be considered personal data. An example of this would be when the name of a legal person (name of a company) is derived from the name of a natural person. Some EU Member States (Italy, Austria or Luxembourg) have extended the scope of the Data Protection Directive to the processing of information on legal persons. As in the case of deceased persons, it may be easier in practice to process all information in accordance with the Data Protection Rules, rather than differentiating between legal and natural persons. Limits of the scope of application Although the definitions of \"personal data\" and \"processing\" in the Data Protection Directive are intentionally broad, it does not follow that every case in which it would hypothetically be possible to identify specific individuals is in fact a case to which the provisions of the Data Protection Directive apply. Such restrictions may exist, for example, if the data are not processed automatically and in a non-structured form. Likewise, the purpose of use may constitute a restriction of the Data Protection Directive, for example, if data are used by a natural person exclusively for personal or family activities. Even if the processing of personal data falls within the scope of the Data Protection Directive, not all of its provisions necessarily apply to the specific situation. A number of provisions of the Directive provide a high degree of flexibility to strike a balance between the protection of data subjects' rights and the legitimate interests of controllers, third parties and the public interest, if any. 4 The data protection of the Data Protection Directive therefore refers to the protection against forms of processing that are typical of \"easy access to the data\" and the risks that go along with it. For example, if in a dataset the name of individuals is replaced by a unique code (e.g. name \u2192 X4321), there is a certain risk of identification in case access to the key used for encryption is obtained. Therefore, such possibilities must be included. In principle, the guideline in this respect can be: \"whether the persons can be identified taking into account all the means likely reasonably to be used by the controller or any other person\". Examples of such a consideration would be the risk of a hacking attack, the likelihood that an individual of the organisation responsible for the data set could disclose the key, or the feasibility of indirect identification. These considerations then determine whether the information should be classified as \"personal data\". If the codes are not unique, but, for example, the same code number is used for different persons in different cities and for data from different years (i.e. the coding is only differentiated to the extent that it is possible to distinguish persons in one year in one city), the persons could only be identified if it is known to which year and to which city the data refer. However, if this additional information is no longer available and cannot be recovered with reasonable effort, the data could be considered as not relating to identifiable persons and consequently the data protection provision would not apply. As has been shown, there are situations in which information is not to be classified as \"personal data\". This is the case if the information does not relate to an individual or if the individual is not considered to be identified or identifiable. If the information does not fall under the definition of \"personal data\", the Data Protection Directive does not apply. However, if the Data Protection Directive does not apply, national data protection laws may apply in certain circumstances. Example of personal data Direct and indirect information name and first name date of birth or age place of birth home address e-mail address identification numbers national insurance number tax identification number health insurance number identity card number matriculation number etc. ethnic and cultural origin political, religious and philosophical beliefs health sexuality trade union membership location data IP address cookie identifier advertising identifier of your phone credit card data bank details account numbers credit information account balances etc. property characteristics vehicle and property ownership land register entries vehicle registration plates registration data etc. customer number information affecting private and family life in the strict sense of the term all kinds of activities, such as those related to employment, economic or social behaviour biometric data biological characteristics physiological characteristics facial features gender skin, hair and eye colour stature clothing size fingerprints eye retina face shape voice Hand geometry vein structure reproducible actions etc. special skills or other behavioural characteristics handwritten signature keystroke characteristic gait manner of speaking etc. data on consumers, patients, customers, employees, etc. information on drug prescriptions identification number of the medicinal product name active substance content manufacturer sales price new pack or refill reasons for use reasons for not using generics first and last name of prescribing doctor telephone number Whether in the form of an individual prescription or in the form of samples recognisable from several prescriptions. This information, even if the patient is anonymous, can be considered personal data about the doctor issuing the prescription. etc. value judgements School and work certificates etc. Formats or carriers of the information information in alphabetical, numerical, graphic, photographic, aural or any other form information on paper and digital information Sound and image data in particular are to be considered personal data because they may constitute information about a natural person. Links EU Commission \u2192 What is personal data? EU Commission \u2192 What personal data is considered sensitive? The following information is based on Opinion 4/2007 on the concept of personal data of the Article 29 Working Party of the European Union. \u21a9 The text on this page is intended only as an overview and introduction to the topic of \"personal data\" and its protection and is not a legally binding treatise. In this sense, the author assumes no liability and makes no claim to completeness or accuracy. \u21a9 Working Party document No WP 105: \"Working document on data protection issues related to RFID technology\", adopted on 19.1.2005, p. 8. For detailed information see Opinion 4/2007 on the concept of personal data , S. 9ff \u21a9 For further information see: Opinion 4/2007 on the concept of personal data of the Article 29 Working Party of the European Union, S. 5 \u21a9","title":"What to pseudonymise?"},{"location":"whatToPseudonymize/#what-to-pseudonymize","text":"As a general rule, all personal data should be pseudonymised. According to Directive 95/46/EC of the European Union (hereinafter referred to as the \"Data Protection Directive\"), personal data shall mean \"any information relating to an identified or identifiable natural person.\" An identifiable person is one who can be identified, directly or indirectly. This can be done by means of an identification number, but also by means of one or more specific characteristics which are an expression of physical, physiological, mental, economic, cultural or social identity. This makes it clear that special care must be taken not only to pseudonymise obviously personal information, but also information that can enable the identification of a person via secondary characteristics, e.g. locations or behaviour patterns. In general terms, the Data Protection Directive aims to ensure the protection of fundamental rights and freedoms of individuals, in particular privacy, with regard to the processing of personal data. The definition of \"personal data\" consists of four elements. A more detailed analysis of these is instructive for understanding what is meant by \"personal data\". These four elements are: 1. any information 2. relating to 3. an identified or identifiable 4. natural person","title":"What to pseudonymize?"},{"location":"whatToPseudonymize/#1-any-information","text":"With the wording \"all information\", the Data Protection Directive refers to the fact that the term \"personal data\" is to be understood as broadly as possible, i.e. it requires a generous interpretation. \"Personal data\" can thus be any information about a person. This can be objective information, such as body size or medical findings, but also subjective information, such as opinions or assessments by and about a person. Assessments from companies about customers such as: \"Titius is a reliable borrower\" or \"Titius is a good employee and deserves a promotion\" are examples of this. This information does not necessarily have to be true to be considered personal data.","title":"1. Any Information"},{"location":"whatToPseudonymize/#2-relating-to","text":"In general, information refers to a person when it is information about that person. In many situations, a reference can be easily established. The information in personnel files or medical records clearly refers to a specific person. The same applies to video or audio recordings. However, there are also many situations in which it is not easy to determine whether certain information refers to a person. In principle, in these cases, \"data relates to an individual if it refers to the identity, characteristics or behaviour of an individual or if such information is used to determine or influence the way in which that person is treated or evaluated 3 .\" An example of this would be the location monitoring of taxis to improve the quality of service. Even if this monitoring is solely to improve the quality of service, it can have an indirect impact on drivers. If a taxi company's taxis are tracked by GPS at their headquarters in order to assign each customer to the taxi closest to them, which would save time and fuel, it is in principle the vehicles' data that is of interest and not the drivers'. Thus, the purpose of the data collection is not to assess or monitor whether drivers are taking the shortest routes or obeying speed limits. Nevertheless, such collection could be made with this system. Thus, it is in principle possible that this data processing system may have a significant impact on individuals and thus the related data may be classified as \"personal data\". Therefore, the data collected should be subject to data protection rules.","title":"2. Relating to"},{"location":"whatToPseudonymize/#3-an-identified-or-identifiable","text":"A natural person is considered an \"identified person\" if he or she is distinguished from all other members in a group of persons, i.e. he or she is clearly identifiable. If there are several persons with the same name in a data collection and no further information is available that makes a person uniquely identifiable, these persons are thus not considered to be \"specified persons\", since it cannot be clearly determined to which natural person the corresponding data record refers. An \"identifiable person\" in this context is therefore a natural person for whom it is in principle possible to establish his or her identity. In this respect, the Data Protection Directive identifies in Article 2 general \"characteristics\" of \"personal data\". Such data exist when a natural person \"can be identified, directly or indirectly, in particular by reference to an identification number or to one or more factors specific to his physical, physiological, mental, economic, cultural or social identity\". A person can be identified directly by his or her name or indirectly by a telephone number, car registration number or insurance number. Equally, however, this is also possible through a combination of essential criteria, such as place of residence, occupation or age group, which makes it possible to narrow down the group to which the person belongs. This shows that the information needed for identification depends on the context of the situation. While a frequently occurring family name is not sufficient to identify a person within a national population, within a school class it may well be sufficient to successfully identify a person. The category \"indirectly identified or identifiable persons\" thus refers to identification by means of unique combinations. The scope of these combinations does not matter. Depending on the context, a person can be determined by means of a few characteristics or a very large quantity of them is required. Even if the existing data do not allow an immediate conclusion to be drawn about specific persons, these persons can still be identifiable because the existing information in combination with other information could make a clear identification of these persons possible. It is irrelevant whether this additional information is stored by the data controller, is not stored or is not available to the data controller at all. \"Whereas to determine whether a person is identifiable\", as defined in the Data Protection Directive, \"account should be taken of all the means likely reasonably to be used either by the controller or by any other person to identify the said person.\" This means that the mere hypothetical possibility to identify a person is not sufficient to consider the person identifiable. If this possibility does not exist or is negligible, then the person is not to be classified as \"identifiable\" and the corresponding information is not considered \"personal data\". However, this classification must be seen as a dynamic process. What is not possible at the current time, with the current state of the technology, may well be feasible at a later date. Consequently, the potential development of the technical possibility should be taken into account in relation to the time period during which the data is stored. For example, if the data is kept for one month and identification is almost impossible during this period, the data is not considered \"personal data\". However, if the retention period is 10 years and identification could become possible during this period, this possibility should be taken into account by the data controller. In case of a future possibility of identification, the data shall be considered as personal data from that moment on.","title":"3. An identified or identifiable"},{"location":"whatToPseudonymize/#4-natural-person","text":"The provisions of the Data Protection Directive apply to natural persons. This means that the right to the protection of personal data applies generally to all people and not just to nationals or residents of a particular country. A more precise definition of what constitutes a legal personality is found in the civil law of individual states. In general, it refers to the capacity to enter into a legal relationship, which begins at birth and ends at death. Personal data is therefore data that relates to specific or identifiable living persons. Since it is not always possible to determine whether a person is actually no longer alive, in practice, for the sake of simplicity, data on deceased persons should be treated in the same way as data on living persons, rather than processing the two groups separately. Furthermore, information about deceased persons can also relate to living persons. For example, information about a hereditary disease of the deceased father can enable conclusions to be drawn about his children. Therefore, if information about deceased persons relates to living persons at the same time and is personal data, personal data about deceased persons may indirectly fall under the protection of the data protection regulation. Since the definition of \"personal data\" refers in principle only to human beings, i.e. natural persons, legal persons do not fall within the scope of the Data Protection Directive and its protection therefore does not apply to them. This general provision is limited for cases where the information on the legal person allows a reference to a natural person. In such cases, the data must be considered personal data. An example of this would be when the name of a legal person (name of a company) is derived from the name of a natural person. Some EU Member States (Italy, Austria or Luxembourg) have extended the scope of the Data Protection Directive to the processing of information on legal persons. As in the case of deceased persons, it may be easier in practice to process all information in accordance with the Data Protection Rules, rather than differentiating between legal and natural persons.","title":"4. Natural person"},{"location":"whatToPseudonymize/#limits-of-the-scope-of-application","text":"Although the definitions of \"personal data\" and \"processing\" in the Data Protection Directive are intentionally broad, it does not follow that every case in which it would hypothetically be possible to identify specific individuals is in fact a case to which the provisions of the Data Protection Directive apply. Such restrictions may exist, for example, if the data are not processed automatically and in a non-structured form. Likewise, the purpose of use may constitute a restriction of the Data Protection Directive, for example, if data are used by a natural person exclusively for personal or family activities. Even if the processing of personal data falls within the scope of the Data Protection Directive, not all of its provisions necessarily apply to the specific situation. A number of provisions of the Directive provide a high degree of flexibility to strike a balance between the protection of data subjects' rights and the legitimate interests of controllers, third parties and the public interest, if any. 4 The data protection of the Data Protection Directive therefore refers to the protection against forms of processing that are typical of \"easy access to the data\" and the risks that go along with it. For example, if in a dataset the name of individuals is replaced by a unique code (e.g. name \u2192 X4321), there is a certain risk of identification in case access to the key used for encryption is obtained. Therefore, such possibilities must be included. In principle, the guideline in this respect can be: \"whether the persons can be identified taking into account all the means likely reasonably to be used by the controller or any other person\". Examples of such a consideration would be the risk of a hacking attack, the likelihood that an individual of the organisation responsible for the data set could disclose the key, or the feasibility of indirect identification. These considerations then determine whether the information should be classified as \"personal data\". If the codes are not unique, but, for example, the same code number is used for different persons in different cities and for data from different years (i.e. the coding is only differentiated to the extent that it is possible to distinguish persons in one year in one city), the persons could only be identified if it is known to which year and to which city the data refer. However, if this additional information is no longer available and cannot be recovered with reasonable effort, the data could be considered as not relating to identifiable persons and consequently the data protection provision would not apply. As has been shown, there are situations in which information is not to be classified as \"personal data\". This is the case if the information does not relate to an individual or if the individual is not considered to be identified or identifiable. If the information does not fall under the definition of \"personal data\", the Data Protection Directive does not apply. However, if the Data Protection Directive does not apply, national data protection laws may apply in certain circumstances.","title":"Limits of the scope of application"},{"location":"whatToPseudonymize/#example-of-personal-data","text":"","title":"Example of personal data"},{"location":"whatToPseudonymize/#direct-and-indirect-information","text":"name and first name date of birth or age place of birth home address e-mail address identification numbers national insurance number tax identification number health insurance number identity card number matriculation number etc. ethnic and cultural origin political, religious and philosophical beliefs health sexuality trade union membership location data IP address cookie identifier advertising identifier of your phone credit card data bank details account numbers credit information account balances etc. property characteristics vehicle and property ownership land register entries vehicle registration plates registration data etc. customer number information affecting private and family life in the strict sense of the term all kinds of activities, such as those related to employment, economic or social behaviour biometric data biological characteristics physiological characteristics facial features gender skin, hair and eye colour stature clothing size fingerprints eye retina face shape voice Hand geometry vein structure reproducible actions etc. special skills or other behavioural characteristics handwritten signature keystroke characteristic gait manner of speaking etc. data on consumers, patients, customers, employees, etc. information on drug prescriptions identification number of the medicinal product name active substance content manufacturer sales price new pack or refill reasons for use reasons for not using generics first and last name of prescribing doctor telephone number Whether in the form of an individual prescription or in the form of samples recognisable from several prescriptions. This information, even if the patient is anonymous, can be considered personal data about the doctor issuing the prescription. etc. value judgements School and work certificates etc.","title":"Direct and indirect information"},{"location":"whatToPseudonymize/#formats-or-carriers-of-the-information","text":"information in alphabetical, numerical, graphic, photographic, aural or any other form information on paper and digital information Sound and image data in particular are to be considered personal data because they may constitute information about a natural person.","title":"Formats or carriers of the information"},{"location":"whatToPseudonymize/#links","text":"EU Commission \u2192 What is personal data? EU Commission \u2192 What personal data is considered sensitive? The following information is based on Opinion 4/2007 on the concept of personal data of the Article 29 Working Party of the European Union. \u21a9 The text on this page is intended only as an overview and introduction to the topic of \"personal data\" and its protection and is not a legally binding treatise. In this sense, the author assumes no liability and makes no claim to completeness or accuracy. \u21a9 Working Party document No WP 105: \"Working document on data protection issues related to RFID technology\", adopted on 19.1.2005, p. 8. For detailed information see Opinion 4/2007 on the concept of personal data , S. 9ff \u21a9 For further information see: Opinion 4/2007 on the concept of personal data of the Article 29 Working Party of the European Union, S. 5 \u21a9","title":"Links"},{"location":"setup/configuration/","text":"Configuration The install package The installation package contains everything necessary for the proper operation of pseudify. This includes the configuration files to connect pseudify to a database and examples of how pseudify can be functionally extended. The files are to be understood as start templates that you can adapt to your own requirements. Content: docker-compose.yml : Starts pseudify with the GUI for analyzing the database and modeling pseudonymization tasks (we call it the analyze setup ). docker-compose.llm-addon.yml : Extends the analyze setup with AI capabilities. Pseudify uses this locally running LLM to determine personally identifiable information (PII). The data is processed exclusively on your computer and does not leave it. docker-compose.database.yml : Contains an example of how a database server can be started via docker compose if you need it. userdata/ : This folder contains everything you need to configure and extend pseudify. userdata/.env.example : An example of the basic configuration of pseudify. Pseudify mainly uses env variables for the basic configuration. userdata/config/ : This folder contains files for advanced configuration. userdata/src/ : This folder contains the analysis and pseudonymization profile(s) that you have created with the GUI. This folder also includes examples for custom functional extensions. userdata/src/Encoder/ : This folder contains an example of a custom data encoder implementation ( Rot13Encoder ). userdata/src/Faker/ : This folder contains an example of a custom data faker implementation ( BobRossLipsum ). userdata/src/Processing/ : This folder contains an example of a custom condition expression implementation ( isBobRoss() ). userdata/src/Profiles/ : This folder contains the pseudify profiles. It can contain the low-level profiles (PHP) or the YAML profiles created via the GUI. userdata/src/Profiles/Yaml/ : This folder contains the YAML pseudify profiles created via the GUI. userdata/src/Types/ : This folder contains an example of custom database type implementations ( Enum and Set ). Configuration options .env The basic configuration of pseudify takes place using values in an .env file. The install package contain an exemplary .env file which can be used as a basis for your own configuration. PSEUDIFY_FAKER_LOCALE Default: en_US Pseudify uses the FakerPHP/Faker component to generate the pseudonyms. The component allows the generation of language-specific values . Supported values of PSEUDIFY_FAKER_LOCALE can be found in the FakerPHP/Faker Repository . Example PSEUDIFY_FAKER_LOCALE=de_DE PSEUDIFY_DATABASE_DRIVER Default: pdo_mysql Resolves to connection parameter: doctrine.dbal.connections.default.driver The value of PSEUDIFY_DATABASE_DRIVER must be a supported driver of the Doctrine DBAL component . The pseudify docker container comes with the following driver support: pdo_mysql (A MySQL driver that uses the pdo_mysql PDO extension mysqli (A MySQL driver that uses the mysqli extension pdo_pgsql (A PostgreSQL driver that uses the pdo_pgsql PDO extension) pdo_sqlite (An SQLite driver that uses the pdo_sqlite PDO extension) sqlite3 (An SQLite driver that uses the sqlite3 extension) pdo_sqlsrv (A Microsoft SQL Server driver that uses pdo_sqlsrv PDO) sqlsrv (A Microsoft SQL Server driver that uses the sqlsrv PHP extension) Info Support for the oci8 driver for Oracle databases should be possible (pull requests are welcome). Example PSEUDIFY_DATABASE_DRIVER=pdo_mysql PSEUDIFY_DATABASE_HOST Default: <empty> Resolves to connection parameter: doctrine.dbal.connections.default.host The host name under which the database server can be reached. This value is only used when using the following drivers: pdo_mysql mysqli pdo_pgsql oci8 pdo_sqlsrv sqlsrv Example PSEUDIFY_DATABASE_HOST=host.docker.internal PSEUDIFY_DATABASE_PORT Default: <empty> Resolves to connection parameter: doctrine.dbal.connections.default.port The port under which the database server can be reached. This value is only used when using the following drivers: pdo_mysql mysqli pdo_pgsql oci8 pdo_sqlsrv sqlsrv Example PSEUDIFY_DATABASE_PORT=3306 PSEUDIFY_DATABASE_USER Default: <empty> Resolves to connection parameter: doctrine.dbal.connections.default.user The user name of the database. This value is only used when using the following drivers: pdo_sqlite pdo_mysql mysqli pdo_pgsql oci8 pdo_sqlsrv sqlsrv Example PSEUDIFY_DATABASE_USER=pseudify PSEUDIFY_DATABASE_PASSWORD Default: <empty> Resolves to connection parameter: doctrine.dbal.connections.default.password The password of the database. This value is only used when using the following drivers: pdo_sqlite pdo_mysql mysqli pdo_pgsql oci8 pdo_sqlsrv sqlsrv Example PSEUDIFY_DATABASE_PASSWORD='super(!)sEcReT' PSEUDIFY_DATABASE_SCHEMA Default: <empty> Resolves to connection parameter: doctrine.dbal.connections.default.dbname or doctrine.dbal.connections.default.path For the following drivers, PSEUDIFY_DATABASE_SCHEMA corresponds to the database name: pdo_mysql mysqli pdo_pgsql oci8 pdo_sqlsrv sqlsrv For the following drivers, PSEUDIFY_DATABASE_SCHEMA corresponds to the file system path to the database: pdo_sqlite sqlite3 Example PSEUDIFY_DATABASE_SCHEMA=wordpress_prod PSEUDIFY_DATABASE_CHARSET Default: utf8mb4 Resolves to connection parameter: doctrine.dbal.connections.default.charset The character set used during the connection to the database. This value is only used when using the following drivers: pdo_mysql mysqli pdo_pgsql oci8 Example PSEUDIFY_DATABASE_CHARSET=utf8mb4 PSEUDIFY_DATABASE_VERSION Default: <empty> Resolves to connection parameter: doctrine.dbal.connections.default.server_version Doctrine comes with different database platform implementations for some vendors to support version-specific features, dialects and behaviours. The drivers automatically detect the platform version and instantiate the appropriate platform class. If you want to disable automatic database platform detection and explicitly select the platform version implementation, you can do this with the value in PSEUDIFY_DATABASE_VERSION . Info If you are using a MariaDB database, you should prefix the value PSEUDIFY_DATABASE_VERSION with mariadb- (example: mariadb-10.2). Example PSEUDIFY_DATABASE_VERSION=8.0 PSEUDIFY_DATABASE_SSL_INSECURE Default: <empty> Resolves to connection parameter: doctrine.dbal.connections.default.options.TrustServerCertificate If the value of PSEUDIFY_DATABASE_SSL_INSECURE is set to 1 , no check of the TLS certificate of the database server is performed. This value is only used when using the following drivers: pdo_sqlsrv sqlsrv PSEUDIFY_DATABASE_SSL_INSECURE=1 Advanced connection settings If you need to configure other driver options, you can do so in the install package file userdata/config/configuration.yaml . Examples and information for driver options can be found in the following documents: Symfony DoctrineBundle - Doctrine DBAL Configuration Doctrine DBAL- Connection Details After changes of the connection settings, the cache must be cleared pseudify cache:clear Multiple connection configurations It is possible to configure multiple connections. The connection named default is used as the default connection. In the install package file userdata/config/configuration.yaml further connections can be configured under a different name. doctrine: dbal: connections: myCustomConnection: driver: sqlsrv # ... The configured connections can be used with the --connection parameter. pseudify pseudify:pseudonymize --connection myCustomConnection myPseudonymizationProfileName The following commands accept the --connection parameter: pseudify:analyze pseudify:autoconfiguration pseudify:debug:analyze pseudify:debug:pseudonymize pseudify:debug:table_schema pseudify:pseudonymize Custom extensions Registering custom database types If user-defined database types are required, you can define them at connection level in the install package file userdata/config/configuration.yaml . Example implementations for user-defined database types can be found in the following install package files: userdata/src/Types/TYPO3/EnumType.php userdata/src/Types/TYPO3/SetType.php These user-defined database types can then be configured in the install package file userdata/config/configuration.yaml doctrine: dbal: types: enum: Waldhacker\\Pseudify\\Types\\TYPO3\\EnumType set: Waldhacker\\Pseudify\\Types\\TYPO3\\SetType connections: default: mapping_types: enum: enum set: set Examples and information for user-defined data types can be found in the following documents: Symfony DoctrineBundle - Registering custom Mapping Types Symfony DoctrineBundle - Registering custom Mapping Types in the SchemaTool Doctrine DBAL - Custom Mapping Types After adding custom data types, the cache must be cleared. pseudify cache:clear Registering custom faker formatters The FakerPHP/Faker component comes with a lot of predefined formatters to generate various data formats. If you want to use custom formatters, you can look at the implementation of the BobRossLipsumProvider example. The custom formatter must implement the interface Waldhacker\\Pseudify\\Core\\Faker\\FakeDataProviderInterface to be integrated into the system. The best way to see how formatters can generate data is to look at the providers in the FakerPHP/Faker project . After adding custom faker formatters, the cache must be cleared. pseudify cache:clear Registering custom decoders / encoders If you want to use custom decoders / encoders, you can see an implementation in the example of the Rot13Encoder . The custom decoder / encoder must implement the interface Waldhacker\\Pseudify\\Core\\Processor\\Encoder\\EncoderInterface to be integrated into the system. The best way to see how decoders / encoders can decode and encode data is to look at the built-in decoders/encoders like the Base64Encoder . If you want your decoder / encoder to be configurable via the GUI, your encoder / decoder must provide a form type that defines the configuration form. Look at the Base64Encoder which provides the Base64EncoderType to get an idea how to provide a configuration form. Additional information for user-defined form types can be found in the following document: Symfony Forms - How to Create a Custom Form Field Type After adding custom decoders/encoders, the cache must be cleared. pseudify cache:clear Note User-defined decoders / encoders should follow the <Format>Encoder naming convention (e.g. HexEncoder , Rot13Encoder etc.). This ensures that debug commands like pseudify:debug:analyse can represent the names of the decoders / encoders well. Register custom condition expressions If you want to use custom condition expressions, you can see an implementation in the example of the ConditionExpressionProvider . You need to define an description and an Symfony\\Component\\ExpressionLanguage\\ExpressionFunction implementation which implements the evaluator . Additional information for user-defined expressions can be found in the following document: Symfony ExpressionLanguage - Extending the ExpressionLanguage Manage database access Database access can be managed in various ways. Some variants are presented below. Access a database running on your host system Pseudify is running as a standalone binary ( pseudonymization setup ) Add the parameter --add-host=host.docker.internal:host-gateway to the docker run command. The option PSEUDIFY_DATABASE_HOST in the install package file userdata/.env must be set to host.docker.internal . Note For this variant to work, the port of the database server on the docker gateway (host system) must be open. Then run pseudify like: $ docker run --rm -it --add-host=host.docker.internal:host-gateway -v \"$(pwd)/userdata/\":/opt/pseudify/userdata/ \\ ghcr.io/waldhacker/pseudify-ai:2.0 pseudify:debug:table_schema pseudify is running using docker compose ( analyze setup ) Add the OPTION extra_hosts: ['host.docker.internal:host-gateway'] in the install package file docker-compose.yml like: services: pseudify: # ... extra_hosts: - 'host.docker.internal:host-gateway' The option PSEUDIFY_DATABASE_HOST in the install package file userdata/.env must be set to host.docker.internal . Then start pseudify like: $ docker compose up -d Access a database using docker services pseudify is running as a standalone binary ( pseudonymization setup ) Create a docker network with the name pseudify-net (if none already exists): $ docker network create pseudify-net Start a database server using the network pseudify-net ( --network pseudify-net ). The database container is given the name mariadb_10_5 ( --name mariadb_10_5 ). Therefore the option PSEUDIFY_DATABASE_HOST in the install package file userdata/.env must be set to mariadb_10_5 . Note For the import of the test database ( -v \"$(pwd)\"/database-data:/docker-entrypoint-initdb.d ) to work correctly, the command must be executed in the main directory of the install package. $ docker run --rm --detach \\ --network pseudify-net \\ --name mariadb_10_5 \\ --env MARIADB_USER=pseudify \\ --env MARIADB_PASSWORD='P53ud1fy(!)w4ldh4ck3r' \\ --env MARIADB_ROOT_PASSWORD='P53ud1fy(!)w4ldh4ck3r' \\ --env MARIADB_DATABASE=pseudify_utf8mb4 \\ -v \"$(pwd)\"/database-data:/docker-entrypoint-initdb.d \\ mariadb:10.5 Then run pseudify like: $ docker run --rm -it --add-host=host.docker.internal:host-gateway -v \"$(pwd)/userdata/\":/opt/pseudify/userdata/ \\ ghcr.io/waldhacker/pseudify-ai:2.0 pseudify:debug:table_schema pseudify is running using docker compose ( analyze setup ) You can use the install package file docker-compose.database.yml and adapt it to your needs. The option PSEUDIFY_DATABASE_HOST in the install package file userdata/.env must be set to database service name like mariadb_10_5 . Then start pseudify like: $ docker compose -f docker-compose.yml -f docker-compose.database.yml up -d Debug the configuration Commands exist to check the configuration of the system. pseudify:information The command pseudify pseudify:information lists: available profiles to analyse the database ( Registered analyse profiles ) available profiles to pseudonymise the database ( Registered pseudonymize profiles ) registered database types registered condition expressions registered encoders / decoders database drivers available in the system ( Available built-in database drivers ) information per configured connection ( Connection information for connection \"<connecntion name>\" ) information about which database types are associated with which doctrine implementations ( Registered doctrine database data type mappings ) information about the doctrine driver implementations used and the system driver used ( Connection details ). debug:config DoctrineBundle The command lists the combined database configuration, which consists of the core configuration and the user-defined configuration from the install package . debug:dotenv The command lists the values from the .env file.","title":"Configuration"},{"location":"setup/configuration/#configuration","text":"","title":"Configuration"},{"location":"setup/configuration/#the-install-package","text":"The installation package contains everything necessary for the proper operation of pseudify. This includes the configuration files to connect pseudify to a database and examples of how pseudify can be functionally extended. The files are to be understood as start templates that you can adapt to your own requirements. Content: docker-compose.yml : Starts pseudify with the GUI for analyzing the database and modeling pseudonymization tasks (we call it the analyze setup ). docker-compose.llm-addon.yml : Extends the analyze setup with AI capabilities. Pseudify uses this locally running LLM to determine personally identifiable information (PII). The data is processed exclusively on your computer and does not leave it. docker-compose.database.yml : Contains an example of how a database server can be started via docker compose if you need it. userdata/ : This folder contains everything you need to configure and extend pseudify. userdata/.env.example : An example of the basic configuration of pseudify. Pseudify mainly uses env variables for the basic configuration. userdata/config/ : This folder contains files for advanced configuration. userdata/src/ : This folder contains the analysis and pseudonymization profile(s) that you have created with the GUI. This folder also includes examples for custom functional extensions. userdata/src/Encoder/ : This folder contains an example of a custom data encoder implementation ( Rot13Encoder ). userdata/src/Faker/ : This folder contains an example of a custom data faker implementation ( BobRossLipsum ). userdata/src/Processing/ : This folder contains an example of a custom condition expression implementation ( isBobRoss() ). userdata/src/Profiles/ : This folder contains the pseudify profiles. It can contain the low-level profiles (PHP) or the YAML profiles created via the GUI. userdata/src/Profiles/Yaml/ : This folder contains the YAML pseudify profiles created via the GUI. userdata/src/Types/ : This folder contains an example of custom database type implementations ( Enum and Set ).","title":"The install package"},{"location":"setup/configuration/#configuration-options","text":"","title":"Configuration options"},{"location":"setup/configuration/#env","text":"The basic configuration of pseudify takes place using values in an .env file. The install package contain an exemplary .env file which can be used as a basis for your own configuration.","title":".env"},{"location":"setup/configuration/#pseudify_faker_locale","text":"Default: en_US Pseudify uses the FakerPHP/Faker component to generate the pseudonyms. The component allows the generation of language-specific values . Supported values of PSEUDIFY_FAKER_LOCALE can be found in the FakerPHP/Faker Repository .","title":"PSEUDIFY_FAKER_LOCALE"},{"location":"setup/configuration/#example","text":"PSEUDIFY_FAKER_LOCALE=de_DE","title":"Example"},{"location":"setup/configuration/#pseudify_database_driver","text":"Default: pdo_mysql Resolves to connection parameter: doctrine.dbal.connections.default.driver The value of PSEUDIFY_DATABASE_DRIVER must be a supported driver of the Doctrine DBAL component . The pseudify docker container comes with the following driver support: pdo_mysql (A MySQL driver that uses the pdo_mysql PDO extension mysqli (A MySQL driver that uses the mysqli extension pdo_pgsql (A PostgreSQL driver that uses the pdo_pgsql PDO extension) pdo_sqlite (An SQLite driver that uses the pdo_sqlite PDO extension) sqlite3 (An SQLite driver that uses the sqlite3 extension) pdo_sqlsrv (A Microsoft SQL Server driver that uses pdo_sqlsrv PDO) sqlsrv (A Microsoft SQL Server driver that uses the sqlsrv PHP extension) Info Support for the oci8 driver for Oracle databases should be possible (pull requests are welcome).","title":"PSEUDIFY_DATABASE_DRIVER"},{"location":"setup/configuration/#example_1","text":"PSEUDIFY_DATABASE_DRIVER=pdo_mysql","title":"Example"},{"location":"setup/configuration/#pseudify_database_host","text":"Default: <empty> Resolves to connection parameter: doctrine.dbal.connections.default.host The host name under which the database server can be reached. This value is only used when using the following drivers: pdo_mysql mysqli pdo_pgsql oci8 pdo_sqlsrv sqlsrv","title":"PSEUDIFY_DATABASE_HOST"},{"location":"setup/configuration/#example_2","text":"PSEUDIFY_DATABASE_HOST=host.docker.internal","title":"Example"},{"location":"setup/configuration/#pseudify_database_port","text":"Default: <empty> Resolves to connection parameter: doctrine.dbal.connections.default.port The port under which the database server can be reached. This value is only used when using the following drivers: pdo_mysql mysqli pdo_pgsql oci8 pdo_sqlsrv sqlsrv","title":"PSEUDIFY_DATABASE_PORT"},{"location":"setup/configuration/#example_3","text":"PSEUDIFY_DATABASE_PORT=3306","title":"Example"},{"location":"setup/configuration/#pseudify_database_user","text":"Default: <empty> Resolves to connection parameter: doctrine.dbal.connections.default.user The user name of the database. This value is only used when using the following drivers: pdo_sqlite pdo_mysql mysqli pdo_pgsql oci8 pdo_sqlsrv sqlsrv","title":"PSEUDIFY_DATABASE_USER"},{"location":"setup/configuration/#example_4","text":"PSEUDIFY_DATABASE_USER=pseudify","title":"Example"},{"location":"setup/configuration/#pseudify_database_password","text":"Default: <empty> Resolves to connection parameter: doctrine.dbal.connections.default.password The password of the database. This value is only used when using the following drivers: pdo_sqlite pdo_mysql mysqli pdo_pgsql oci8 pdo_sqlsrv sqlsrv","title":"PSEUDIFY_DATABASE_PASSWORD"},{"location":"setup/configuration/#example_5","text":"PSEUDIFY_DATABASE_PASSWORD='super(!)sEcReT'","title":"Example"},{"location":"setup/configuration/#pseudify_database_schema","text":"Default: <empty> Resolves to connection parameter: doctrine.dbal.connections.default.dbname or doctrine.dbal.connections.default.path For the following drivers, PSEUDIFY_DATABASE_SCHEMA corresponds to the database name: pdo_mysql mysqli pdo_pgsql oci8 pdo_sqlsrv sqlsrv For the following drivers, PSEUDIFY_DATABASE_SCHEMA corresponds to the file system path to the database: pdo_sqlite sqlite3","title":"PSEUDIFY_DATABASE_SCHEMA"},{"location":"setup/configuration/#example_6","text":"PSEUDIFY_DATABASE_SCHEMA=wordpress_prod","title":"Example"},{"location":"setup/configuration/#pseudify_database_charset","text":"Default: utf8mb4 Resolves to connection parameter: doctrine.dbal.connections.default.charset The character set used during the connection to the database. This value is only used when using the following drivers: pdo_mysql mysqli pdo_pgsql oci8","title":"PSEUDIFY_DATABASE_CHARSET"},{"location":"setup/configuration/#example_7","text":"PSEUDIFY_DATABASE_CHARSET=utf8mb4","title":"Example"},{"location":"setup/configuration/#pseudify_database_version","text":"Default: <empty> Resolves to connection parameter: doctrine.dbal.connections.default.server_version Doctrine comes with different database platform implementations for some vendors to support version-specific features, dialects and behaviours. The drivers automatically detect the platform version and instantiate the appropriate platform class. If you want to disable automatic database platform detection and explicitly select the platform version implementation, you can do this with the value in PSEUDIFY_DATABASE_VERSION . Info If you are using a MariaDB database, you should prefix the value PSEUDIFY_DATABASE_VERSION with mariadb- (example: mariadb-10.2).","title":"PSEUDIFY_DATABASE_VERSION"},{"location":"setup/configuration/#example_8","text":"PSEUDIFY_DATABASE_VERSION=8.0","title":"Example"},{"location":"setup/configuration/#pseudify_database_ssl_insecure","text":"Default: <empty> Resolves to connection parameter: doctrine.dbal.connections.default.options.TrustServerCertificate If the value of PSEUDIFY_DATABASE_SSL_INSECURE is set to 1 , no check of the TLS certificate of the database server is performed. This value is only used when using the following drivers: pdo_sqlsrv sqlsrv PSEUDIFY_DATABASE_SSL_INSECURE=1","title":"PSEUDIFY_DATABASE_SSL_INSECURE"},{"location":"setup/configuration/#advanced-connection-settings","text":"If you need to configure other driver options, you can do so in the install package file userdata/config/configuration.yaml . Examples and information for driver options can be found in the following documents: Symfony DoctrineBundle - Doctrine DBAL Configuration Doctrine DBAL- Connection Details After changes of the connection settings, the cache must be cleared pseudify cache:clear","title":"Advanced connection settings"},{"location":"setup/configuration/#multiple-connection-configurations","text":"It is possible to configure multiple connections. The connection named default is used as the default connection. In the install package file userdata/config/configuration.yaml further connections can be configured under a different name. doctrine: dbal: connections: myCustomConnection: driver: sqlsrv # ... The configured connections can be used with the --connection parameter. pseudify pseudify:pseudonymize --connection myCustomConnection myPseudonymizationProfileName The following commands accept the --connection parameter: pseudify:analyze pseudify:autoconfiguration pseudify:debug:analyze pseudify:debug:pseudonymize pseudify:debug:table_schema pseudify:pseudonymize","title":"Multiple connection configurations"},{"location":"setup/configuration/#custom-extensions","text":"","title":"Custom extensions"},{"location":"setup/configuration/#registering-custom-database-types","text":"If user-defined database types are required, you can define them at connection level in the install package file userdata/config/configuration.yaml . Example implementations for user-defined database types can be found in the following install package files: userdata/src/Types/TYPO3/EnumType.php userdata/src/Types/TYPO3/SetType.php These user-defined database types can then be configured in the install package file userdata/config/configuration.yaml doctrine: dbal: types: enum: Waldhacker\\Pseudify\\Types\\TYPO3\\EnumType set: Waldhacker\\Pseudify\\Types\\TYPO3\\SetType connections: default: mapping_types: enum: enum set: set Examples and information for user-defined data types can be found in the following documents: Symfony DoctrineBundle - Registering custom Mapping Types Symfony DoctrineBundle - Registering custom Mapping Types in the SchemaTool Doctrine DBAL - Custom Mapping Types After adding custom data types, the cache must be cleared. pseudify cache:clear","title":"Registering custom database types"},{"location":"setup/configuration/#registering-custom-faker-formatters","text":"The FakerPHP/Faker component comes with a lot of predefined formatters to generate various data formats. If you want to use custom formatters, you can look at the implementation of the BobRossLipsumProvider example. The custom formatter must implement the interface Waldhacker\\Pseudify\\Core\\Faker\\FakeDataProviderInterface to be integrated into the system. The best way to see how formatters can generate data is to look at the providers in the FakerPHP/Faker project . After adding custom faker formatters, the cache must be cleared. pseudify cache:clear","title":"Registering custom faker formatters"},{"location":"setup/configuration/#registering-custom-decoders-encoders","text":"If you want to use custom decoders / encoders, you can see an implementation in the example of the Rot13Encoder . The custom decoder / encoder must implement the interface Waldhacker\\Pseudify\\Core\\Processor\\Encoder\\EncoderInterface to be integrated into the system. The best way to see how decoders / encoders can decode and encode data is to look at the built-in decoders/encoders like the Base64Encoder . If you want your decoder / encoder to be configurable via the GUI, your encoder / decoder must provide a form type that defines the configuration form. Look at the Base64Encoder which provides the Base64EncoderType to get an idea how to provide a configuration form. Additional information for user-defined form types can be found in the following document: Symfony Forms - How to Create a Custom Form Field Type After adding custom decoders/encoders, the cache must be cleared. pseudify cache:clear Note User-defined decoders / encoders should follow the <Format>Encoder naming convention (e.g. HexEncoder , Rot13Encoder etc.). This ensures that debug commands like pseudify:debug:analyse can represent the names of the decoders / encoders well.","title":"Registering custom decoders / encoders"},{"location":"setup/configuration/#register-custom-condition-expressions","text":"If you want to use custom condition expressions, you can see an implementation in the example of the ConditionExpressionProvider . You need to define an description and an Symfony\\Component\\ExpressionLanguage\\ExpressionFunction implementation which implements the evaluator . Additional information for user-defined expressions can be found in the following document: Symfony ExpressionLanguage - Extending the ExpressionLanguage","title":"Register custom condition expressions"},{"location":"setup/configuration/#manage-database-access","text":"Database access can be managed in various ways. Some variants are presented below.","title":"Manage database access"},{"location":"setup/configuration/#access-a-database-running-on-your-host-system","text":"","title":"Access a database running on your host system"},{"location":"setup/configuration/#pseudify-is-running-as-a-standalone-binary-pseudonymization-setup","text":"Add the parameter --add-host=host.docker.internal:host-gateway to the docker run command. The option PSEUDIFY_DATABASE_HOST in the install package file userdata/.env must be set to host.docker.internal . Note For this variant to work, the port of the database server on the docker gateway (host system) must be open. Then run pseudify like: $ docker run --rm -it --add-host=host.docker.internal:host-gateway -v \"$(pwd)/userdata/\":/opt/pseudify/userdata/ \\ ghcr.io/waldhacker/pseudify-ai:2.0 pseudify:debug:table_schema","title":"Pseudify is running as a standalone binary (pseudonymization setup)"},{"location":"setup/configuration/#pseudify-is-running-using-docker-compose-analyze-setup","text":"Add the OPTION extra_hosts: ['host.docker.internal:host-gateway'] in the install package file docker-compose.yml like: services: pseudify: # ... extra_hosts: - 'host.docker.internal:host-gateway' The option PSEUDIFY_DATABASE_HOST in the install package file userdata/.env must be set to host.docker.internal . Then start pseudify like: $ docker compose up -d","title":"pseudify is running using docker compose (analyze setup)"},{"location":"setup/configuration/#access-a-database-using-docker-services","text":"","title":"Access a database using docker services"},{"location":"setup/configuration/#pseudify-is-running-as-a-standalone-binary-pseudonymization-setup_1","text":"Create a docker network with the name pseudify-net (if none already exists): $ docker network create pseudify-net Start a database server using the network pseudify-net ( --network pseudify-net ). The database container is given the name mariadb_10_5 ( --name mariadb_10_5 ). Therefore the option PSEUDIFY_DATABASE_HOST in the install package file userdata/.env must be set to mariadb_10_5 . Note For the import of the test database ( -v \"$(pwd)\"/database-data:/docker-entrypoint-initdb.d ) to work correctly, the command must be executed in the main directory of the install package. $ docker run --rm --detach \\ --network pseudify-net \\ --name mariadb_10_5 \\ --env MARIADB_USER=pseudify \\ --env MARIADB_PASSWORD='P53ud1fy(!)w4ldh4ck3r' \\ --env MARIADB_ROOT_PASSWORD='P53ud1fy(!)w4ldh4ck3r' \\ --env MARIADB_DATABASE=pseudify_utf8mb4 \\ -v \"$(pwd)\"/database-data:/docker-entrypoint-initdb.d \\ mariadb:10.5 Then run pseudify like: $ docker run --rm -it --add-host=host.docker.internal:host-gateway -v \"$(pwd)/userdata/\":/opt/pseudify/userdata/ \\ ghcr.io/waldhacker/pseudify-ai:2.0 pseudify:debug:table_schema","title":"pseudify is running as a standalone binary (pseudonymization setup)"},{"location":"setup/configuration/#pseudify-is-running-using-docker-compose-analyze-setup_1","text":"You can use the install package file docker-compose.database.yml and adapt it to your needs. The option PSEUDIFY_DATABASE_HOST in the install package file userdata/.env must be set to database service name like mariadb_10_5 . Then start pseudify like: $ docker compose -f docker-compose.yml -f docker-compose.database.yml up -d","title":"pseudify is running using docker compose (analyze setup)"},{"location":"setup/configuration/#debug-the-configuration","text":"Commands exist to check the configuration of the system.","title":"Debug the configuration"},{"location":"setup/configuration/#pseudifyinformation","text":"The command pseudify pseudify:information lists: available profiles to analyse the database ( Registered analyse profiles ) available profiles to pseudonymise the database ( Registered pseudonymize profiles ) registered database types registered condition expressions registered encoders / decoders database drivers available in the system ( Available built-in database drivers ) information per configured connection ( Connection information for connection \"<connecntion name>\" ) information about which database types are associated with which doctrine implementations ( Registered doctrine database data type mappings ) information about the doctrine driver implementations used and the system driver used ( Connection details ).","title":"pseudify:information"},{"location":"setup/configuration/#debugconfig-doctrinebundle","text":"The command lists the combined database configuration, which consists of the core configuration and the user-defined configuration from the install package .","title":"debug:config DoctrineBundle"},{"location":"setup/configuration/#debugdotenv","text":"The command lists the values from the .env file.","title":"debug:dotenv"},{"location":"setup/installation/","text":"Installation Pseudify can be used in 2 variants that offer different features: Variant 1: The pseudonymization setup intended for continuous integration/continuous delivery (CI/CD) systems. This variant can only run pseudonymization tasks. Variant 2: The analysis setup that offers you a GUI for modeling the pseudonymization profile and additionally a locally hosted AI model for advanced PII detection. The pseudonymization setup Dependencies The following components must be installed: docker Get the install package Go to some empty directory. Download the \"install package\" and unpack the userdata in the current directory: $ docker run --rm -it -v \"$(pwd)\":/install -w /install -u $(id -u):$(id -g) alpine/curl /bin/sh -c \"\\ curl -fsSL https://github.com/waldhacker/pseudify-ai/releases/latest/download/install-package.tar.gz -o install-package.tar.gz \\ && tar -xzf ./install-package.tar.gz ./userdata \\ && rm -f ./install-package.tar.gz \\ \" Run pseudify Now you can test whether pseudify is running correctly: $ docker run --rm -it -v \"$(pwd)/userdata/\":/opt/pseudify/userdata/ \\ ghcr.io/waldhacker/pseudify-ai:2.0 pseudify:information If you need to know how to manage database access look at the configuration chapter. The analyze setup For local use only The GUI is designed as as a single user app and intended for local usage on a development machine. This is important for security reasons. NEVER EVER host the analyze setup on a publicly accessible server. Dependencies The following components must be installed: docker docker compose If you want to use the AI support, you need to install: CUDA drivers NVIDIA Container Toolkit Get the install package Go to some empty directory. Download the \"install package\" and unpack it in the current directory: $ docker run --rm -it -v \"$(pwd)\":/install -w /install -u $(id -u):$(id -g) alpine/curl /bin/sh -c \"\\ curl -fsSL https://github.com/waldhacker/pseudify-ai/releases/latest/download/install-package.tar.gz -o install-package.tar.gz \\ && tar -xzf ./install-package.tar.gz \\ && rm -f ./install-package.tar.gz \\ \" Start pseudify without AI support: $ docker compose up -d Start pseudify with AI support: $ docker compose -f docker-compose.yml -f docker-compose.llm-addon.yml up -d $ docker exec -it pseudify_ollama bash -c 'ollama pull $OLLAMA_MODEL' Launch the GUI Now go to your browser an open http://127.0.0.1:9669 to access the GUI. If you need to know how to manage database access look at the configuration chapter. Shutdown (without AI support): $ docker compose down Shutdown (with AI support): $ docker compose -f docker-compose.yml -f docker-compose.llm-addon.yml down","title":"Installation"},{"location":"setup/installation/#installation","text":"Pseudify can be used in 2 variants that offer different features: Variant 1: The pseudonymization setup intended for continuous integration/continuous delivery (CI/CD) systems. This variant can only run pseudonymization tasks. Variant 2: The analysis setup that offers you a GUI for modeling the pseudonymization profile and additionally a locally hosted AI model for advanced PII detection.","title":"Installation"},{"location":"setup/installation/#the-pseudonymization-setup","text":"Dependencies The following components must be installed: docker","title":"The pseudonymization setup"},{"location":"setup/installation/#get-the-install-package","text":"Go to some empty directory. Download the \"install package\" and unpack the userdata in the current directory: $ docker run --rm -it -v \"$(pwd)\":/install -w /install -u $(id -u):$(id -g) alpine/curl /bin/sh -c \"\\ curl -fsSL https://github.com/waldhacker/pseudify-ai/releases/latest/download/install-package.tar.gz -o install-package.tar.gz \\ && tar -xzf ./install-package.tar.gz ./userdata \\ && rm -f ./install-package.tar.gz \\ \"","title":"Get the install package"},{"location":"setup/installation/#run-pseudify","text":"Now you can test whether pseudify is running correctly: $ docker run --rm -it -v \"$(pwd)/userdata/\":/opt/pseudify/userdata/ \\ ghcr.io/waldhacker/pseudify-ai:2.0 pseudify:information If you need to know how to manage database access look at the configuration chapter.","title":"Run pseudify"},{"location":"setup/installation/#the-analyze-setup","text":"For local use only The GUI is designed as as a single user app and intended for local usage on a development machine. This is important for security reasons. NEVER EVER host the analyze setup on a publicly accessible server. Dependencies The following components must be installed: docker docker compose If you want to use the AI support, you need to install: CUDA drivers NVIDIA Container Toolkit","title":"The analyze setup"},{"location":"setup/installation/#get-the-install-package_1","text":"Go to some empty directory. Download the \"install package\" and unpack it in the current directory: $ docker run --rm -it -v \"$(pwd)\":/install -w /install -u $(id -u):$(id -g) alpine/curl /bin/sh -c \"\\ curl -fsSL https://github.com/waldhacker/pseudify-ai/releases/latest/download/install-package.tar.gz -o install-package.tar.gz \\ && tar -xzf ./install-package.tar.gz \\ && rm -f ./install-package.tar.gz \\ \"","title":"Get the install package"},{"location":"setup/installation/#start-pseudify-without-ai-support","text":"$ docker compose up -d","title":"Start pseudify without AI support:"},{"location":"setup/installation/#start-pseudify-with-ai-support","text":"$ docker compose -f docker-compose.yml -f docker-compose.llm-addon.yml up -d $ docker exec -it pseudify_ollama bash -c 'ollama pull $OLLAMA_MODEL'","title":"Start pseudify with AI support:"},{"location":"setup/installation/#launch-the-gui","text":"Now go to your browser an open http://127.0.0.1:9669 to access the GUI. If you need to know how to manage database access look at the configuration chapter.","title":"Launch the GUI"},{"location":"setup/installation/#shutdown-without-ai-support","text":"$ docker compose down","title":"Shutdown (without AI support):"},{"location":"setup/installation/#shutdown-with-ai-support","text":"$ docker compose -f docker-compose.yml -f docker-compose.llm-addon.yml down","title":"Shutdown (with AI support):"}]}